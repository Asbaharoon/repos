package org.nmeict.smvdu.Beans;

import java.util.ArrayList;
import java.util.List;
import javax.faces.application.FacesMessage;

import javax.faces.bean.ManagedBean;
import javax.faces.bean.RequestScoped;
import javax.faces.component.UIData;
import javax.faces.context.FacesContext;
import javax.faces.model.SelectItem;

import org.nmeict.smvdu.Beans.SpringClassFile.IStudentFeeMasterService;
import org.nmeict.smvdu.Beans.SpringClassFile.IStudentRegistrationMasterService;
import org.nmeict.smvdu.Beans.SpringClassFile.StudentFeeMasterService;
import org.nmeict.smvdu.Beans.SpringClassFile.StudentRegistrationMasterService;
import org.nmeict.smvdu.HibernateHelper.OrgProfileSessionDetails;
import org.primefaces.event.SelectEvent;


@ManagedBean(name="studentMaster")
@RequestScoped
/**
 * StudentMaster generated by hbm2java
 */
public class StudentMaster  implements java.io.Serializable {


     private Integer smSeqId;
     private OtherFeeHeadMaster otherFeeHeadMaster;
     private OrgProfile orgProfile;
     private SemesterMaster semesterMaster;
     private DegreeType degreeType;
     private OrgDepartmentType orgDepartmentType;
     private BranchMaster branchMaster;
     private String entryNo;
     private String batch;
     private String program;
     private Double studentOpbalAmount;
     
     
     private Double totalBalance;
     private Double netBalence;
     private Double feeHeadValue;
     private String feeHeadName;
     private Integer feeHeadCode;
     private Integer semCode;
     private Integer departmentCode;
     private Integer degreeCode;
     private Integer examCode;
     private Integer branchCode;
     private String branchName;
     private String departmentName;
     private String degreeName;
     private String examCodeName;
     private String semesterName;
     private UIData dataGrid;
     private List<StudentMaster> loadAllFee = new ArrayList<StudentMaster>();
     private List<StudentRegMaster> loadAllStudentRegDetails = new ArrayList<StudentRegMaster>();
     private SelectItem[] items;
     private IStudentRegistrationMasterService iStudentRegistrationMasterService = new StudentRegistrationMasterService();
     private IStudentFeeMasterService iStudentFeeMasterService = new StudentFeeMasterService();
     private StudentMaster studentFeeMaster;
    public StudentMaster() {
    }

    public StudentMaster(OtherFeeHeadMaster otherFeeHeadMaster, OrgProfile orgProfile, SemesterMaster semesterMaster, DegreeType degreeType, OrgDepartmentType orgDepartmentType, BranchMaster branchMaster, String entryNo, String batch, String program, Double studentOpbalAmount) {
       this.otherFeeHeadMaster = otherFeeHeadMaster;
       this.orgProfile = orgProfile;
       this.semesterMaster = semesterMaster;
       this.degreeType = degreeType;
       this.orgDepartmentType = orgDepartmentType;
       this.branchMaster = branchMaster;
       this.entryNo = entryNo;
       this.batch = batch;
       this.program = program;
       this.studentOpbalAmount = studentOpbalAmount;
    }
   
    
    public StudentMaster getStudentFeeMaster() {
		return studentFeeMaster;
	}

	public void setStudentFeeMaster(StudentMaster studentFeeMaster) {
		this.studentFeeMaster = studentFeeMaster;
	}

	public Integer getSmSeqId() {
        return this.smSeqId;
    }
    
    public void setSmSeqId(Integer smSeqId) {
        this.smSeqId = smSeqId;
    }
    public OtherFeeHeadMaster getOtherFeeHeadMaster() {
        return this.otherFeeHeadMaster;
    }
    
    public void setOtherFeeHeadMaster(OtherFeeHeadMaster otherFeeHeadMaster) {
        this.otherFeeHeadMaster = otherFeeHeadMaster;
    }
    public Double getFeeHeadValue() {
		return feeHeadValue;
	}

	public void setFeeHeadValue(Double feeHeadValue) {
		this.feeHeadValue = feeHeadValue;
	}

	public OrgProfile getOrgProfile() {
        return this.orgProfile;
    }
    
    public void setOrgProfile(OrgProfile orgProfile) {
        this.orgProfile = orgProfile;
    }
    public SemesterMaster getSemesterMaster() {
        return this.semesterMaster;
    }
    
    public void setSemesterMaster(SemesterMaster semesterMaster) {
        this.semesterMaster = semesterMaster;
    }
    public Double getTotalBalance() {
		return totalBalance;
	}

	public void setTotalBalance(Double totalBalance) {
		this.totalBalance = totalBalance;
	}

	public DegreeType getDegreeType() {
        return this.degreeType;
    }
    
    public void setDegreeType(DegreeType degreeType) {
        this.degreeType = degreeType;
    }
    public OrgDepartmentType getOrgDepartmentType() {
        return this.orgDepartmentType;
    }
    
    public void setOrgDepartmentType(OrgDepartmentType orgDepartmentType) {
        this.orgDepartmentType = orgDepartmentType;
    }
    public BranchMaster getBranchMaster() {
        return this.branchMaster;
    }
    
    public void setBranchMaster(BranchMaster branchMaster) {
        this.branchMaster = branchMaster;
    }
    public String getEntryNo() {
        return this.entryNo;
    }
    
    public void setEntryNo(String entryNo) {
        this.entryNo = entryNo;
    }
    public String getBatch() {
        return this.batch;
    }
    
    public void setBatch(String batch) {
        this.batch = batch;
    }
    public String getProgram() {
        return this.program;
    }
    
    public void setProgram(String program) {
        this.program = program;
    }
    public Double getStudentOpbalAmount() {
        return this.studentOpbalAmount;
    }
    
    public void setStudentOpbalAmount(Double studentOpbalAmount) {
        this.studentOpbalAmount = studentOpbalAmount;
    }

	public Integer getSemCode() {
		return semCode;
	}

	public void setSemCode(Integer semCode) {
		this.semCode = semCode;
	}

	public Integer getDepartmentCode() {
		return departmentCode;
	}

	public void setDepartmentCode(Integer departmentCode) {
		this.departmentCode = departmentCode;
	}

	public Integer getDegreeCode() {
		return degreeCode;
	}

	public void setDegreeCode(Integer degreeCode) {
		this.degreeCode = degreeCode;
	}

	public Integer getExamCode() {
		return examCode;
	}

	public void setExamCode(Integer examCode) {
		this.examCode = examCode;
	}

	public Integer getBranchCode() {
		return branchCode;
	}

	public void setBranchCode(Integer branchCode) {
		this.branchCode = branchCode;
	}

	public String getBranchName() {
		return branchName;
	}

	public void setBranchName(String branchName) {
		this.branchName = branchName;
	}
	

	public String getFeeHeadName() {
		return feeHeadName;
	}

	public void setFeeHeadName(String feeHeadName) {
		this.feeHeadName = feeHeadName;
	}

	public Integer getFeeHeadCode() {
		return feeHeadCode;
	}

	public void setFeeHeadCode(Integer feeHeadCode) {
		this.feeHeadCode = feeHeadCode;
	}

	public String getDepartmentName() {
		return departmentName;
	}

	public void setDepartmentName(String departmentName) {
		this.departmentName = departmentName;
	}

	public String getDegreeName() {
		return degreeName;
	}

	public void setDegreeName(String degreeName) {
		this.degreeName = degreeName;
	}

	public String getExamCodeName() {
		return examCodeName;
	}

	public void setExamCodeName(String examCodeName) {
		this.examCodeName = examCodeName;
	}

	public String getSemesterName() {
		return semesterName;
	}

	public void setSemesterName(String semesterName) {
		this.semesterName = semesterName;
	}

	public UIData getDataGrid() {
		return dataGrid;
	}

	public void setDataGrid(UIData dataGrid) {
		this.dataGrid = dataGrid;
	}

	
	public List<StudentMaster> getLoadAllFee() {
		loadAllFee = getiStudentFeeMasterService().loadAllFeeDetails();
		 List<StudentRegMaster> op = getLoadAllStudentRegDetails();
		dataGrid.setValue(loadAllFee);
		return loadAllFee;
	}

	public SelectItem[] getItems() {
		
		return items;
	}

	public void setItems(SelectItem[] items) {
		this.items = items;
	}

	public void setLoadAllFee(List<StudentMaster> loadAllFee) {
		this.loadAllFee = loadAllFee;
	}
    
	
	
	public Double getNetBalence() {
		return netBalence;
	}

	public void setNetBalence(Double netBalence) {
		this.netBalence = netBalence;
	}

	//public void saveFee()
        public String saveFee()	{
            
            try{    
                FacesContext fc = FacesContext.getCurrentInstance();
                FacesMessage message = null;
                if(this.getEntryNo().isEmpty()){
                    message = new FacesMessage();
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    message.setSummary("Please Enter Student Registration Number. It Cann't  be Empty.");
                    //message.setDetail("Degree Doesn't Exist in Selected Department.");
                    fc.addMessage("", message);
                    return null;
                }
                if(this.getStudentOpbalAmount() == 0){
                    message = new FacesMessage();
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    message.setSummary("Please Enter Amount. It Cann't  be Empty.");
                    //message.setDetail("Degree Doesn't Exist in Selected Department.");
                    fc.addMessage("", message);
                    return null;
                }
                
		OrgProfile op = new OrgProfile();
		OrgDepartmentType odt = new OrgDepartmentType();
		DegreeType dt = new DegreeType();
		BranchMaster bm = new BranchMaster();
		SemesterMaster sm = new SemesterMaster();
		OtherFeeHeadMaster otfm = new OtherFeeHeadMaster();
		op.setOrgId(new OrgProfileSessionDetails().getOrgProfileSession().getOrgId());
		odt.setOdtSeqNo(this.getDepartmentCode());
		dt.setSeqNo(this.getDegreeCode());
		bm.setBmSeqNo(this.getBranchCode());
		sm.setSemSeqNo(this.getSemCode());
		otfm.setFeeHeadCode(this.getFeeHeadCode());
		this.setOrgProfile(op);
		this.setOrgDepartmentType(odt);
		this.setDegreeType(dt);
		this.setBranchMaster(bm);
		this.setSemesterMaster(sm);
		this.setOtherFeeHeadMaster(otfm);
		getiStudentFeeMasterService().addStudentFeeMaster(this);
                return "FeeProcessing.xhtml?faces-redirect=true";
            }
            catch (Exception e){
                    FacesContext.getCurrentInstance().addMessage("", new FacesMessage(FacesMessage.SEVERITY_ERROR, ""+e, ""));
                   return null;
                
            }
	}

	public IStudentFeeMasterService getiStudentFeeMasterService() {
		return iStudentFeeMasterService;
	}

	public void setiStudentFeeMasterService(
			IStudentFeeMasterService iStudentFeeMasterService) {
		this.iStudentFeeMasterService = iStudentFeeMasterService;
	}
	
	
    
	
	
		public IStudentRegistrationMasterService getiStudentRegistrationMasterService() {
		return iStudentRegistrationMasterService;
	}

	public void setiStudentRegistrationMasterService(
			IStudentRegistrationMasterService iStudentRegistrationMasterService) {
		this.iStudentRegistrationMasterService = iStudentRegistrationMasterService;
	}

		public List<StudentRegMaster> getLoadAllStudentRegDetails() {
			loadAllStudentRegDetails = getiStudentRegistrationMasterService().loadAllStudent();
			
			for(StudentRegMaster str : loadAllStudentRegDetails)
			{ 
				System.out.println("Id---List "+str.getEntryNo());
			}
			return loadAllStudentRegDetails;
		}
	

	public void setLoadAllStudentRegDetails(
			List<StudentRegMaster> loadAllStudentRegDetails) {
		this.loadAllStudentRegDetails = loadAllStudentRegDetails;
	}

	public void selectRegistrationId(SelectEvent event) throws Exception
	{
		System.out.println("Id----->"+this.entryNo);
	}

}


