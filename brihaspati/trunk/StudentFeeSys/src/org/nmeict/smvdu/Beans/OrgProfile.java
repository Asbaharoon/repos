package org.nmeict.smvdu.Beans;
// Generated Mar 30, 2013 9:21:41 AM by Hibernate Tools 3.2.1.GA

import java.util.ArrayList;
import java.io.File;
import java.io.FileInputStream;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.faces.application.FacesMessage;

import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.component.UIData;
import javax.faces.context.FacesContext;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.nmeict.smvdu.Beans.Administrator.CollegeList;

import org.nmeict.smvdu.Beans.Administrator.CollegeRequestStatus;
import org.nmeict.smvdu.Beans.Administrator.ServerDetails;
import org.nmeict.smvdu.Beans.email.OrgConformationEmail;

import org.nmeict.smvdu.Beans.SpringClassFile.IOrgProfileService;
import org.nmeict.smvdu.Beans.SpringClassFile.OrgProfileService;
import org.nmeict.smvdu.HibernateHelper.OrgProfileSessionDetails;

@ManagedBean(name="orgProfileBeans")
@SessionScoped
/**
 * OrgProfile generated by hbm2java
 */
public class OrgProfile  implements java.io.Serializable {

    private String orgId;
    private String orgName;
    private String orgCity;
    private Integer orgPincode;
    private String orgState;
    private Integer orgLl;
    private String orgCountrycode;
    private Integer orgRegioncode;
    private String orgInstitutedomain;
    private String orgToi;
    private String orgInstituteweb;
    private String orgAffiliation;
    private String orgAdminfn;
    private String orgAdminln;
    private String orgAdmindesig;
    private String orgAdminemailid;
    private String orgMasterPassword;
    private String orgTagline;
    private String orgEmail;
    private String orgWeb;
    private String orgPhone;
    private String orgAddress1;
    private String orgAddress2;
    private byte[] orgLogo;
    private String orgRecoveryId;
    private String orgTanno;
    private Integer orgRegNoti;
    private Byte orgStatus;
    private Date orgRegDate;
    private String orgCountryName;
    private Set studentFeesMasters = new HashSet(0);
    private Set bankProfiles = new HashSet(0);
    private Set courseGroupMasters = new HashSet(0);
    private Set tempFinalReports = new HashSet(0);
    private Set studentRegMasters = new HashSet(0);
    private Set challanMasters = new HashSet(0);
    private Set modeOfPayments = new HashSet(0);
    private Set mopHeadFieldses = new HashSet(0);
    private Set adminFeeAdminMasters = new HashSet(0);
    private Set examCodeSetUps = new HashSet(0);
    private Set orgLoginDetailses = new HashSet(0);
    private Set studentMasters = new HashSet(0);
    private Set degreeTypes = new HashSet(0);
    private Set branchMasters = new HashSet(0);
    private Set orgDepartmentTypes = new HashSet(0);
    private Set otherFeeHeadMasters = new HashSet(0);
    private Set orgLogoDetailses = new HashSet(0);
    private Set collegePendingStatuses = new HashSet(0);
    private Set semesterMasters = new HashSet(0);
    private Set orgImageDetailsesForUserId = new HashSet(0);
    private Set orgImageDetailsesForOrgId = new HashSet(0);
    private UIData dataGrid;
    private List<OrgProfile> listOrgMaster = new ArrayList<OrgProfile>();
    private OrgLoginDetails orgLoginDetails = new OrgLoginDetails();
    private OrgLogoDetails orgLogoDetails = new OrgLogoDetails();
    private IOrgProfileService iOrgProfileService = new OrgProfileService();
    private String fileName;
    private String filePath;
    private String logoDetailOrgId;
    private String orgLogoFile;
    private String ipAddress;
    private String port;
    
    private String adUserId;
    private boolean status;
    private String imgUrl;
    private String date;
    private String adPassword;
    private String adRePassword;
        
    public OrgProfile() {
     }

 	
     public OrgProfile(String orgId) {
         this.orgId = orgId;
     }
     public OrgProfile(Set orgImageDetailsesForUserId,Set orgImageDetailsesForOrgId,String orgId, String orgName, String orgCity, Integer orgPincode, String orgState, Integer orgLl, String orgCountrycode, Integer orgRegioncode, String orgInstitutedomain, String orgToi, String orgInstituteweb, String orgAffiliation, String orgAdminfn, String orgAdminln, String orgAdmindesig, String orgAdminemailid, String orgMasterPassword, String orgTagline, String orgEmail, String orgWeb, String orgPhone, String orgAddress1, String orgAddress2, byte[] orgLogo, String orgRecoveryId, String orgTanno, Integer orgRegNoti, Byte orgStatus, Date orgRegDate, String orgCountryName, Set studentFeesMasters, Set bankProfiles, Set courseGroupMasters, Set tempFinalReports, Set studentRegMasters, Set challanMasters, Set modeOfPayments, Set mopHeadFieldses, Set adminFeeAdminMasters, Set examCodeSetUps, Set semesterMasters, Set orgLoginDetailses, Set studentMasters, Set degreeTypes, Set branchMasters, Set orgDepartmentTypes, Set otherFeeHeadMasters, Set orgLogoDetailses, Set collegePendingStatuses) {
        this.orgId = orgId;
        this.orgName = orgName;
        this.orgCity = orgCity;
        this.orgPincode = orgPincode;
        this.orgState = orgState;
        this.orgLl = orgLl;
        this.orgCountrycode = orgCountrycode;
        this.orgRegioncode = orgRegioncode;
        this.orgInstitutedomain = orgInstitutedomain;
        this.orgToi = orgToi;
        this.orgInstituteweb = orgInstituteweb;
        this.orgAffiliation = orgAffiliation;
        this.orgAdminfn = orgAdminfn;
        this.orgAdminln = orgAdminln;
        this.orgAdmindesig = orgAdmindesig;
        this.orgAdminemailid = orgAdminemailid;
        this.orgMasterPassword = orgMasterPassword;
        this.orgTagline = orgTagline;
        this.orgEmail = orgEmail;
        this.orgWeb = orgWeb;
        this.orgPhone = orgPhone;
        this.orgAddress1 = orgAddress1;
        this.orgAddress2 = orgAddress2;
        this.orgLogo = orgLogo;
        this.orgRecoveryId = orgRecoveryId;
        this.orgTanno = orgTanno;
        this.orgRegNoti = orgRegNoti;
        this.orgStatus = orgStatus;
        this.orgRegDate = orgRegDate;
        this.orgCountryName = orgCountryName;
        this.studentFeesMasters = studentFeesMasters;
        this.bankProfiles = bankProfiles;
        this.courseGroupMasters = courseGroupMasters;
        this.tempFinalReports = tempFinalReports;
        this.studentRegMasters = studentRegMasters;
        this.challanMasters = challanMasters;
        this.modeOfPayments = modeOfPayments;
        this.mopHeadFieldses = mopHeadFieldses;
        this.adminFeeAdminMasters = adminFeeAdminMasters;
        this.examCodeSetUps = examCodeSetUps;
        this.semesterMasters = semesterMasters;
        this.orgLoginDetailses = orgLoginDetailses;
        this.studentMasters = studentMasters;
        this.degreeTypes = degreeTypes;
        this.branchMasters = branchMasters;
        this.orgDepartmentTypes = orgDepartmentTypes;
        this.otherFeeHeadMasters = otherFeeHeadMasters;
        this.orgLogoDetailses = orgLogoDetailses;
        this.collegePendingStatuses = collegePendingStatuses;
        this.orgImageDetailsesForOrgId = orgImageDetailsesForOrgId;
        this.orgImageDetailsesForUserId = orgImageDetailsesForUserId;
     }
       
     
    public String getOrgId() {
        return this.orgId;
    }
    
    public Set getSemesterMasters() {
		return semesterMasters;
	}


	public void setSemesterMasters(Set semesterMasters) {
		this.semesterMasters = semesterMasters;
	}


	public void setOrgId(String orgId) {
        this.orgId = orgId;
    }
    public String getOrgName() {
        return this.orgName;
    }
    
    public void setOrgName(String orgName) {
        this.orgName = orgName;
    }
    public String getOrgCity() {
        return this.orgCity;
    }
    
    public void setOrgCity(String orgCity) {
        this.orgCity = orgCity;
    }
    public Integer getOrgPincode() {
            return this.orgPincode;
    }
    
    public void setOrgPincode(Integer orgPincode) {
        this.orgPincode = orgPincode;
    }
    public String getOrgState() {
        return this.orgState;
    }
    
    public void setOrgState(String orgState) {
        this.orgState = orgState;
    }
    public Integer getOrgLl() {
        return this.orgLl;
    }
    
    public void setOrgLl(Integer orgLl) {
        this.orgLl = orgLl;
    }
    public String getOrgCountrycode() {
        return this.orgCountrycode;
    }
    
    public void setOrgCountrycode(String orgCountrycode) {
        this.orgCountrycode = orgCountrycode;
    }
    public Integer getOrgRegioncode() {
        return this.orgRegioncode;
    }
    
    public void setOrgRegioncode(Integer orgRegioncode) {
        this.orgRegioncode = orgRegioncode;
    }
    public String getOrgInstitutedomain() {
        return this.orgInstitutedomain;
    }
    
    public void setOrgInstitutedomain(String orgInstitutedomain) {
        this.orgInstitutedomain = orgInstitutedomain;
    }
    public String getOrgToi() {
        return this.orgToi;
    }
    
    public void setOrgToi(String orgToi) {
        this.orgToi = orgToi;
    }
    public String getOrgInstituteweb() {
        return this.orgInstituteweb;
    }
    
    public void setOrgInstituteweb(String orgInstituteweb) {
        this.orgInstituteweb = orgInstituteweb;
    }
    public String getOrgAffiliation() {
        return this.orgAffiliation;
    }
    
    public void setOrgAffiliation(String orgAffiliation) {
        this.orgAffiliation = orgAffiliation;
    }
    public String getOrgAdminfn() {
        return this.orgAdminfn;
    }
    
    public void setOrgAdminfn(String orgAdminfn) {
        this.orgAdminfn = orgAdminfn;
    }
    public String getOrgAdminln() {
        return this.orgAdminln;
    }
    
    public void setOrgAdminln(String orgAdminln) {
        this.orgAdminln = orgAdminln;
    }
    public String getOrgAdmindesig() {
        return this.orgAdmindesig;
    }
    
    public void setOrgAdmindesig(String orgAdmindesig) {
        this.orgAdmindesig = orgAdmindesig;
    }
    public String getOrgAdminemailid() {
        return this.orgAdminemailid;
    }
    
    public void setOrgAdminemailid(String orgAdminemailid) {
        this.orgAdminemailid = orgAdminemailid;
    }
    public String getOrgMasterPassword() {
        return this.orgMasterPassword;
    }
    
    public void setOrgMasterPassword(String orgMasterPassword) {
        this.orgMasterPassword = orgMasterPassword;
    }
    public String getOrgTagline() {
        return this.orgTagline;
    }
    
    public void setOrgTagline(String orgTagline) {
        this.orgTagline = orgTagline;
    }
    public String getOrgEmail() {
        return this.orgEmail;
    }
    
    public void setOrgEmail(String orgEmail) {
        this.orgEmail = orgEmail;
    }
    public String getOrgWeb() {
        return this.orgWeb;
    }
    
    public void setOrgWeb(String orgWeb) {
        this.orgWeb = orgWeb;
    }
    public String getOrgPhone() {
        return this.orgPhone;
    }
    
    public void setOrgPhone(String orgPhone) {
        this.orgPhone = orgPhone;
    }
    public String getOrgAddress1() {
        return this.orgAddress1;
    }
    
    public void setOrgAddress1(String orgAddress1) {
        this.orgAddress1 = orgAddress1;
    }
    public String getOrgAddress2() {
        return this.orgAddress2;
    }
    
    public void setOrgAddress2(String orgAddress2) {
        this.orgAddress2 = orgAddress2;
    }
    public byte[] getOrgLogo() {
    	String path = FacesContext.getCurrentInstance().getExternalContext().getRealPath("/");
        String fn = path+"img/Other298.jpg";
        setFileName(fn);
        setFilePath(fn); 
        File imgFile = new File(fn);
        /*
Commented By shaista
        byte[] imageByte = new byte[(int)imgFile.length()];
        try
        {
            FileInputStream fin = new FileInputStream(imgFile);
            fin.read(imageByte); 
            fin.close();
            this.orgLogo = imageByte;
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        */
        
        return this.orgLogo;
    }
    
    public void setOrgLogo(byte[] orgLogo) {
        this.orgLogo = orgLogo;
    }
    public String getOrgRecoveryId() {
        return this.orgRecoveryId;
    }
    
    public void setOrgRecoveryId(String orgRecoveryId) {
        this.orgRecoveryId = orgRecoveryId;
    }
    public String getOrgTanno() {
        return this.orgTanno;
    }
    
    public void setOrgTanno(String orgTanno) {
        this.orgTanno = orgTanno;
    }
    public Integer getOrgRegNoti() {
        return this.orgRegNoti;
    }
    
    public void setOrgRegNoti(Integer orgRegNoti) {
        this.orgRegNoti = orgRegNoti;
    }
    public Byte getOrgStatus() {
        return this.orgStatus;
    }
    
    public void setOrgStatus(Byte orgStatus) {
        this.orgStatus = orgStatus;
    }
    public Date getOrgRegDate() {
        return this.orgRegDate;
    }
    
    public void setOrgRegDate(Date orgRegDate) {
        this.orgRegDate = orgRegDate;
    }
    public String getOrgCountryName() {
        return this.orgCountryName;
    }
    
    public void setOrgCountryName(String orgCountryName) {
        this.orgCountryName = orgCountryName;
    }
    public Set getBankProfiles() {
        return this.bankProfiles;
    }
    
    public void setBankProfiles(Set bankProfiles) {
        this.bankProfiles = bankProfiles;
    }
    public Set getCourseGroupMasters() {
        return this.courseGroupMasters;
    }
    
    public void setCourseGroupMasters(Set courseGroupMasters) {
        this.courseGroupMasters = courseGroupMasters;
    }
    public Set getStudentFeesMasters() {
        return this.studentFeesMasters;
    }
    
    public void setStudentFeesMasters(Set studentFeesMasters) {
        this.studentFeesMasters = studentFeesMasters;
    }
    public Set getTempFinalReports() {
        return this.tempFinalReports;
    }
    
    public void setTempFinalReports(Set tempFinalReports) {
        this.tempFinalReports = tempFinalReports;
    }
    public Set getStudentRegMasters() {
        return this.studentRegMasters;
    }
    
    public void setStudentRegMasters(Set studentRegMasters) {
        this.studentRegMasters = studentRegMasters;
    }
    public Set getChallanMasters() {
        return this.challanMasters;
    }
    
    public void setChallanMasters(Set challanMasters) {
        this.challanMasters = challanMasters;
    }
    public Set getModeOfPayments() {
        return this.modeOfPayments;
    }
    
    public void setModeOfPayments(Set modeOfPayments) {
        this.modeOfPayments = modeOfPayments;
    }
    public Set getMopHeadFieldses() {
        return this.mopHeadFieldses;
    }
    
    public void setMopHeadFieldses(Set mopHeadFieldses) {
        this.mopHeadFieldses = mopHeadFieldses;
    }
    public Set getAdminFeeAdminMasters() {
        return this.adminFeeAdminMasters;
    }
    
    public void setAdminFeeAdminMasters(Set adminFeeAdminMasters) {
        this.adminFeeAdminMasters = adminFeeAdminMasters;
    }
    public Set getExamCodeSetUps() {
        return this.examCodeSetUps;
    }
    
    public void setExamCodeSetUps(Set examCodeSetUps) {
        this.examCodeSetUps = examCodeSetUps;
    }
    public Set getOrgLoginDetailses() {
        return this.orgLoginDetailses;
    }
    
    public void setOrgLoginDetailses(Set orgLoginDetailses) {
        this.orgLoginDetailses = orgLoginDetailses;
    }
    public Set getStudentMasters() {
        return this.studentMasters;
    }
    
    public void setStudentMasters(Set studentMasters) {
        this.studentMasters = studentMasters;
    }
   
       public Set getOrgLogoDetailses() {
        return this.orgLogoDetailses;
    }
    
    public void setOrgLogoDetailses(Set orgLogoDetailses) {
        this.orgLogoDetailses = orgLogoDetailses;
    }
    public Set getOtherFeeHeadMasters() {
        return this.otherFeeHeadMasters;
    }
    
    public void setOtherFeeHeadMasters(Set otherFeeHeadMasters) {
        this.otherFeeHeadMasters = otherFeeHeadMasters;
    }
    public Set getCollegePendingStatuses() {
        return this.collegePendingStatuses;
    }
    
    public void setCollegePendingStatuses(Set collegePendingStatuses) {
        this.collegePendingStatuses = collegePendingStatuses;
    }
    @Cascade({CascadeType.ALL})
    public Set getOrgImageDetailsesForUserId() {
        return this.orgImageDetailsesForUserId;
    }
    
    public void setOrgImageDetailsesForUserId(Set orgImageDetailsesForUserId) {
        this.orgImageDetailsesForUserId = orgImageDetailsesForUserId;
    }
    @Cascade({CascadeType.ALL})
    public Set getOrgImageDetailsesForOrgId() {
        return this.orgImageDetailsesForOrgId;
    }
    
    public void setOrgImageDetailsesForOrgId(Set orgImageDetailsesForOrgId) {
        this.orgImageDetailsesForOrgId = orgImageDetailsesForOrgId;
    }
    

	

	
	
	
	public Set getDegreeTypes() {
		return degreeTypes;
	}


	public void setDegreeTypes(Set degreeTypes) {
		this.degreeTypes = degreeTypes;
	}


	public Set getOrgDepartmentTypes() {
		return orgDepartmentTypes;
	}


	public void setOrgDepartmentTypes(Set orgDepartmentTypes) {
		this.orgDepartmentTypes = orgDepartmentTypes;
	}


		public String getFileName() {
		return fileName;
	}


	public void setFileName(String fileName) {
		String fn;
        fn = fileName.substring(fileName.lastIndexOf("\\")+1,fileName.lastIndexOf(".")); 
		this.fileName = fn;
	}


	
	public String getFilePath() {
		return filePath;
	}


	public Set getBranchMasters() {
		return branchMasters;
	}


	public void setBranchMasters(Set branchMasters) {
		this.branchMasters = branchMasters;
	}


	public void setFilePath(String filePath) {
		String fp;
        fp = filePath.substring(filePath.lastIndexOf(".")+1);
        this.filePath = fp;
	}


	public OrgLoginDetails getOrgLoginDetails() {
		return orgLoginDetails;
	}


	public void setOrgLoginDetails(OrgLoginDetails orgLoginDetails) {
		this.orgLoginDetails = orgLoginDetails;
	}


	public OrgLogoDetails getOrgLogoDetails() {
		return orgLogoDetails;
	}


	public void setOrgLogoDetails(OrgLogoDetails orgLogoDetails) {
		this.orgLogoDetails = orgLogoDetails;
	}


	public IOrgProfileService getiOrgProfileService() {
		return iOrgProfileService;
	}


	public void setiOrgProfileService(IOrgProfileService iOrgProfileService) {
		this.iOrgProfileService = iOrgProfileService;
	}
        
        public String getOrgIdOfOrgLogoDetail(){
            return logoDetailOrgId;
            
        }
        
        public void setOrgIdOfOrgLogoDetail( String logoDetailOrgId){
            this.logoDetailOrgId = logoDetailOrgId;
        }
        
        public String getOrgLogoFile (){
            return orgLogoFile;
        }
        
        public void setOrgLogoFile(String orgLogoFile){
            this.orgLogoFile = orgLogoFile;
        }
        public UIData getDataGrid() {
		return dataGrid;
	}

	public void setDataGrid(UIData dataGrid) {
		this.dataGrid = dataGrid;
	}
        
/*
	public List getListOrganizations() {
                System.out.print("\n\n\n organizationList==");
		listOrgMaster = getiOrgProfileService().loadOrgProfile();
                System.out.print("\n\n\n listOrgMaster=="+listOrgMaster);
                if(!listOrgMaster.isEmpty()){
                    dataGrid.setValue(listOrgMaster);
                }
                System.out.print("\nstOrgMaster==-----"+listOrgMaster.size());
                return listOrgMaster;
        }
        
        public void setListOrganizations(List <OrgProfile> listOrgMaster) {
            this.listOrgMaster = listOrgMaster;
            
        }
 
 */
	public String getIpAddress() {
        	return ipAddress;
	}

	public void setIpAddress(String ipAddress) {

        	this.ipAddress = ipAddress;
	}

	public String getPort() {
        	return port;
	}

	public void setPort(String port) {
        	this.port = port;
	}
        
        public void saveProfile(){
        
            //System.out.println("This is Start of OrgProfile class ==");
             FacesMessage message = null;
             FacesContext fc = FacesContext.getCurrentInstance();
                if( (this.getOrgName().matches("^[a-zA-Z\\s]*$") == false ) || this.getOrgName().isEmpty() ){
                    message = new FacesMessage();
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    message.setSummary("Please Enter Valid Organization Name.");
                    message.setDetail(" Organization Name Must Be in Charecter ");
                    fc.addMessage("", message);
                    return;
                }
             
                if( (this.getOrgAddress1().matches("^[a-z0-9A-Z\\s\\/]*$") == false ) || this.getOrgAddress1().isEmpty() ){
                    message = new FacesMessage();
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    message.setSummary("Please Enter Valid Address.");
                    message.setDetail("Address Name Must Be Character & Numeric.");
                    fc.addMessage("", message);
                    return;
                }
                
                if( (this.getOrgCity().matches("^[a-zA-Z\\s]*$") == false ) || this.getOrgCity().isEmpty() ){
                    message = new FacesMessage();
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    message.setSummary("Please Enter Valid City Name. It Should be in Character.");
                    //message.setDetail("First Name Must Be At Least Three Charecter ");
                    fc.addMessage("", message);
                    return;
                }
                
                if(this.getOrgPincode().toString().matches("^[0-9]{6}") == false ) {
                    message = new FacesMessage();
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    message.setSummary("Please Enter Valid Pin Code. It Should be 10 digit Integer Number");
                    //message.setDetail("First Name Must Be At Least Three Charecter ");
                    fc.addMessage("", message);
                    return;
                }
                                 
                if( (this.getOrgState().matches("^[a-zA-Z\\s]*$") == false ) || this.getOrgState().isEmpty() ){
                    message = new FacesMessage();
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    message.setSummary("Please Enter Valid State Name. It Should be in Character.");
                    //message.setDetail("First Name Must Be At Least Three Charecter ");
                    fc.addMessage("", message);
                    return;
                }
                 
                if( (this.getOrgPhone().matches(".*[0-9]{7}.*") == false ) || this.getOrgPhone().isEmpty() ){
                    message = new FacesMessage();
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    message.setSummary("Please Enter Valid Phone Number. ");
                    message.setDetail("It must be Integer.");
                    fc.addMessage("", message);
                    return;
                }
                
                if( (this.getOrgCountrycode().toString().matches(".*[0-9]{2}.*") == false ) || this.getOrgCountrycode().toString().isEmpty() ){
                    message = new FacesMessage();
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    message.setSummary("Please Enter Valid Country Code.");
                    message.setDetail("It must be Integer.");
                    fc.addMessage("", message);
                    return;
                }
                
                if( (this.getOrgRegioncode().toString().matches(".*[0-9]{2,4}.*") == false ) || this.getOrgRegioncode().toString().isEmpty() ){
                    message = new FacesMessage();
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    message.setSummary("Please Enter Valid Region Code.");
                    message.setDetail("It must be Integer.");
                    fc.addMessage("", message);
                    return;
                }
              
                if( (this.getOrgLl().toString().matches(".*[0-9]{7}.*") == false ) || this.getOrgLl().toString().isEmpty() ){
                    message = new FacesMessage();
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    message.setSummary("Please Enter Valid Phone Number.");
                    message.setDetail("It must be Integer. ");
                    fc.addMessage("", message);
                    return;
                }

                //if (this.getOrgInstitutedomain().matches("^[_A-Za-z0-9-]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,3})$") == false) {
                if (this.getOrgInstitutedomain().matches("[A-Za-z]+(\\.[A-Za-z]+)*(\\.[A-Za-z]{2,3})$") == false) {

                    message = new FacesMessage();
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    message.setSummary("Domain Name is not Correct.");
                    message.setDetail("Plz Enter Domain Name In Correct Format. ");
                    fc.addMessage("", message);
                return;
                }
                 
                int tempIndex = this.getOrgWeb().indexOf("com");
                //System.out.print("\n tempIndex=="+tempIndex);
                
                // * if site name is with .com so furter dot(.) & chracter is not required
                // * if site name is with .org/.gov/.ac further dot & character must be validate for proper format.
                
                if(tempIndex != -1){
                    
                    if( this.getOrgWeb().matches("^www[.][a-z]{1,15}[.][a-z]{2,4}(\\.[a-z]{2,4})*$") == false ){
                        message = new FacesMessage();
                        message.setSeverity(FacesMessage.SEVERITY_ERROR);
                        message.setSummary("Please Enter Website Name in Correct Format.");
                        //message.setDetail("First Name Must Be At Least Three Charecter ");
                        fc.addMessage("", message);
                        return;
                    }
                }
                else{
                    //if( this.getOrgWeb().matches("^www(\\.[a-z]{1,15})[.](com|org|ac|gov)(\\.[a-z]{2,4})*$") == false ){
                      if( this.getOrgWeb().matches("^www[.][a-z]{1,15}[.][a-z]{2,4}[.][a-z]{2,4}$") == false ){
                        message = new FacesMessage();
                        message.setSeverity(FacesMessage.SEVERITY_ERROR);
                        message.setSummary("Please Enter Website Name in Correct Format.");
                        //message.setDetail("First Name Must Be At Least Three Charecter ");
                        fc.addMessage("", message);
                        return;
                    }
                }

                if (this.getOrgAffiliation().matches("^[_A-Za-z\\s]*$") == false) {

                    message = new FacesMessage();
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    message.setSummary("Please Enter Affiliation in character Format.");
                    fc.addMessage("", message);
                    return;
                }
                  
                if (this.getOrgAdminfn().matches("^[_A-Za-z\\s]*$") == false) {

                    message = new FacesMessage();
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    message.setSummary("Plz Enter Valid Admin First Name. It Should be in Character only. ");
                    fc.addMessage("", message);
                    return;
                }
                
                if (this.getOrgAdminln().matches("^[_A-Za-z\\s]*$") == false) {

                    message = new FacesMessage();
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    message.setSummary("Plz Valid Admin Last Name. It Should be in Character only. ");
                    fc.addMessage("", message);
                    return;
                }
                
                if (this.getOrgAdmindesig().matches("^[_A-Za-z\\s]*$") == false) {

                    message = new FacesMessage();
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    message.setSummary("Plz Enter Designation Name In Correct Format. It should be in Character only. ");
                    fc.addMessage("", message);
                    return;
                }
                
                if (this.getOrgAdminemailid().matches("^[_A-Za-z0-9-]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,4})$") == false) {

                    message = new FacesMessage();
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    message.setSummary("Plz Enter EmailID In Correct Format ");
                    fc.addMessage("", message);
                    return;
                }                                          
                List<OrgProfile> organizationList = getiOrgProfileService().loadOrgProfile();
                //System.out.print("\n organizationsize=="+organizationList.size());
                FacesContext context = FacesContext.getCurrentInstance();
            for(OrgProfile op : organizationList ){
               // System.out.print("\n---op.getOrgInstitutedomain()--"+op.getOrgInstitutedomain());
                if(op.getOrgInstitutedomain().equals(this.getOrgInstitutedomain())){
                    context.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, "Organization already exist.", ""));
                    return;
                }
            }
            
            
            try{
                OrgLogoDetails orgld = new OrgLogoDetails(); 
                OrgLoginDetails old = new OrgLoginDetails();
                orgld.setOrgWeb(this.getOrgWeb()); 
		// Commented by shaista
                //orgld.setOrgLogo(this.getOrgLogo()); 
                orgld.setFileName(this.getFileName());
                orgld.setLogoFormat(this.getFilePath()); 
                old.setAdminId(this.getOrgAdminemailid()); 
                //old.setOrgPassword(this.getOrgMasterPassword());
                if(!this.getOrgMasterPassword().isEmpty()){
                    try{ old.setOrgPassword(OrgLoginDetails.encode(this.getOrgMasterPassword())); 
                            this.setOrgMasterPassword(old.getOrgPassword());
                            //System.out.print("old.getOrgPassword========"+old.getOrgPassword());
                    }
                    catch(Exception e){
                        message = new FacesMessage();
                        message.setSeverity(FacesMessage.SEVERITY_ERROR);
                        message.setSummary("Password is Empty. Exception is in Encoding of Organization Password.");
                        fc.addMessage("", message);
                        return;
                    }
                }

		String orgCode= ""; 
                old.setOrgProfile(this); 
                orgld.setOrgProfile(this);
                //old.setOrgId(this.getOrgId());  
                this.setOrgLogoDetails(orgld); 
                this.setOrgLoginDetails(old); 
		this.setOrgEmail(this.getOrgAdminemailid());

                getiOrgProfileService().addNewOrgProfile(this);
		 new OrgConformationEmail().sendPendingCollegeMail(this);

                organizationList = getiOrgProfileService().loadOrgProfile();
                //System.out.print("\n organizationsize=="+organizationList.size());
                context = FacesContext.getCurrentInstance();
                for(OrgProfile op : organizationList ){
                    //System.out.print("\n---op.getOrgInstitutedomain()--"+op.getOrgInstitutedomain());
                    if(op.getOrgInstitutedomain().equals(this.getOrgInstitutedomain())){
                        orgCode = op.getOrgId();
                    }
                }

                new CollegeRequestStatus().saveRequestStatus(this, orgCode);
                new ServerDetails().saveServerDetail(this, orgCode);

                context.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_INFO, "Organization inserted successfully.", ""));
                //System.out.println("This is Ending OrgProfile class SAVE method==============yy");
             
            }
            catch(Exception ex){
                context.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, "Organization already exist. Exception is "+ex, ""));
            }
        }

		
	//public void update()
    public String update(){
        //FacesContext context = FacesContext.getCurrentInstance();
        try{
                getiOrgProfileService().updateOrgProfile(new OrgProfileSessionDetails().getOrgProfileSession());  
                //FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, "Organization updated successfully.", ""));
                //System.out.println("This is Ending OrgProfile class Update method==============yy");
                return "RegisterProfile.xhtml?faces-redirect=true";
        }
        catch(Exception ex){
            FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, "Organization did not update. Exception is"+ex, ""));
            return null;
        }
               
    }
        
    private ArrayList<OrgProfile> adminList;    
    private UIData dataGrid1;
        
    public UIData getDataGrid1() {
        return dataGrid1;
    }
    public void setDataGrid1(UIData dataGrid1)
    {
        this.dataGrid1 = dataGrid1;
    }
    
    public ArrayList<OrgProfile> getAdminList() {
        adminList = new CollegeList().activeAdminList();
        dataGrid1.setValue(adminList);
        return adminList;
    }

    public void setAdminList(ArrayList<OrgProfile> adminList) {
        this.adminList = adminList;
    }
    
    public String getAdUserId() {
        return adUserId;
    }

    public void setAdUserId(String adUserId) {
        this.adUserId = adUserId;
    }
    
    public String getAdPassword() {
        return adPassword;
    }

    public void setAdPassword(String adPassword) {
        this.adPassword = adPassword;
    }

    public String getAdRePassword() {
        return adRePassword;
    }

    public void setAdRePassword(String adRePassword) {
        this.adRePassword = adRePassword;
    }
    
    public boolean isStatus() {
        return status;
    }

    public void setStatus(boolean status) {
        this.status = status;
    }
    
    public String getImgUrl() {
        return imgUrl;
    }

    public void setImgUrl(String imgUrl) {
        this.imgUrl = imgUrl;
    }
    
    public String getDate() {
        return date;
    }

    public void setDate(String date) {
        this.date = date;
    }
     public void saveAdmin()
    {
        try
        {
            //System.out.println("Addeing.............");
            FacesContext context =  FacesContext.getCurrentInstance();
            
            if(this.getAdUserId().isEmpty()){
                context.addMessage("", new FacesMessage(FacesMessage.SEVERITY_ERROR, "User Id is Empty. Please Insert User Id.", ""));
                return;
            }
            if(this.getAdPassword().isEmpty()){
                 context.addMessage("", new FacesMessage(FacesMessage.SEVERITY_ERROR, "User password is Empty. Please Insert password.", ""));
                 return;
            }
            if(this.getAdRePassword().isEmpty()){
                context.addMessage("", new FacesMessage(FacesMessage.SEVERITY_ERROR, "User Re password is Empty. Please Insert password.", ""));
                return;
            }
            if(!this.getAdPassword().equals(this.getAdRePassword())){
                context.addMessage("", new FacesMessage(FacesMessage.SEVERITY_ERROR, "User Re password is Not Similar To Password. Please Insert Correct Password.", ""));
                return;
            }
            
            ArrayList<OrgProfile> adminList = (ArrayList<OrgProfile>) dataGrid1.getValue();
            int active = 0;
            for(OrgProfile admin : adminList)
            {
                if(admin.getAdUserId().equals(this.getAdUserId())) 
                {
                   context.addMessage("", new FacesMessage(FacesMessage.SEVERITY_ERROR, this.getAdUserId()+": Already Exist.", ""));
                   return; 
                }
            }
            
            boolean bl = new CollegeList().adminDB(this);
            
            if(bl)
                FacesContext.getCurrentInstance().addMessage("", new FacesMessage(FacesMessage.SEVERITY_INFO, "New Admin Is Added : "+this.getAdUserId(), ""));
            else
                FacesContext.getCurrentInstance().addMessage("", new FacesMessage(FacesMessage.SEVERITY_ERROR, "New Admin did Not Add: "+this.getAdUserId(), ""));
            
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
    }
     
    public void updateAdmin()
    {
        try
        {
            //System.out.println("Up Datong....");
            FacesContext fc = FacesContext.getCurrentInstance();
            FacesMessage message = new FacesMessage();

            ArrayList<OrgProfile> admin = (ArrayList<OrgProfile>) dataGrid1.getValue();
            int active = 0;
            for(OrgProfile ad : admin)
            {
                if(ad.isStatus() == true)
                {
                    //System.out.println("\n\nad.isStatus()==="+ad.isStatus());
                    active++;
                }
            }
            //System.out.println("Active Admin : "+active);
            if(active > 1)
            {
                message.setSeverity(FacesMessage.SEVERITY_ERROR);
                 message.setSummary("More Than One Admin Can't Be Activated...");
                 fc.addMessage("", message);
                 return;
            }
           // if(active == 1)
             //   this.setStatus(status);
            Exception ex = new CollegeList().updateAdminStatus(admin);
            adminList = getAdminList();
            
            
            if(ex == null)
            {
                message.setSeverity(FacesMessage.SEVERITY_INFO);
                 message.setSummary("Status Updated...");
                 fc.addMessage("", message);
            }
            else
            {
                message.setSeverity(FacesMessage.SEVERITY_ERROR);
                message.setSummary("Status Not Updated. PleaseTry Again");
                 fc.addMessage(""+ex , message);
            }
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
    }
    
    private ArrayList<OrgProfile> pendingList;
    private UIData dataGrid2;
        
    public UIData getDataGrid2() {
        return dataGrid2;
    }
    public void setDataGrid2(UIData dataGrid2)
    {
        this.dataGrid2 = dataGrid2;
    }
    
    public ArrayList<OrgProfile> getPendingList() {
        pendingList = new CollegeList().getPendingCollegeList();
        //System.out.println("\n\npendingList=="+pendingList.size());
        dataGrid2.setValue(pendingList);
        return pendingList;
    }

    public void setPendingList(ArrayList<OrgProfile> pendingList) {
        this.pendingList = pendingList;
    }
    
    public void updateRequest(){
        try{
            
            ArrayList<OrgProfile> orgProf = (ArrayList<OrgProfile>) dataGrid2.getValue();
            boolean blFlag = false;
            for(OrgProfile o : orgProf)
            {
                //System.out.println(o.getOrgName()+" : "+o.getOrgWeb()+" : "+o.isStatus());
           
                if(o.isStatus())
                    blFlag = true;
                 
            }
            
            if(!blFlag){
                FacesContext.getCurrentInstance().addMessage("", new FacesMessage(FacesMessage.SEVERITY_ERROR, "Please Select CheckBox", ""));
                return;
            }
             
            else{
                    Exception ex= new CollegeList().updateRequest(orgProf);
                    //System.out.println("\n\nex=="+ex);
                    orgProf = (ArrayList<OrgProfile>) dataGrid2.getValue();
                    
                    if(ex == null){
                        FacesContext.getCurrentInstance().addMessage("", new FacesMessage(FacesMessage.SEVERITY_INFO, "College Are Updated", ""));
                    }
            }
            
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
    }
}




