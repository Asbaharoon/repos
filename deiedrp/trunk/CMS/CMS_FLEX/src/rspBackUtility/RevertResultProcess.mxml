<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="632" height="436" title="Revert Result Process" color="#356816" 
	fontFamily="Georgia" fontWeight="bold" fontSize="18" fontStyle="italic" textDecoration="normal" borderColor="#F2F3F3" themeColor="#F2F3F3"
	creationComplete="loadEntities();">

<mx:Script>
	<![CDATA[
		import mx.collections.ArrayCollection;
		import mx.rpc.events.FaultEvent;
		import mx.rpc.events.ResultEvent;
		import mx.controls.Alert;
		import mx.events.CloseEvent;
		import common.commonFunction;
		
		[Embed(source="/images/error.png")]private var errorIcon:Class;
		[Embed(source="/images/success.png")]private var successIcon:Class;
		[Embed(source="/images/question.png")]private var questionIcon:Class;
		[Embed(source="/images/warning.png")]private var warningIcon:Class;
		[Embed(source="/images/infoIcon.png")]private var infoIcon:Class;

		var param:Object = new Object;
		var entityXML:XML = new XML;
		var entityAC:ArrayCollection = new ArrayCollection();
		var programXML:XML = new XML;
		var programAC:ArrayCollection = new ArrayCollection();
		var branchXML:XML = new XML;
		var branchAC:ArrayCollection = new ArrayCollection();
		var specializationXML:XML = new XML;
		var specializationAC:ArrayCollection = new ArrayCollection();
		var semesterXML:XML = new XML;
		var semesterAC:ArrayCollection = new ArrayCollection();
		var successXML:XML = new XML;
		
		private function loadEntities():void{
			httpGetEntities.send([new Date]);
		}
		
		private function resultGetEntities(event:ResultEvent):void{
			entityXML = event.result as XML;
			entityAC.removeAll();
			for each (var object:Object in entityXML.Detail){
				entityAC.addItem({entityName:object.entityName});
			}
			if(entityAC.length==0){
				Alert.show('Entities Not Found','Information',4,null,null,infoIcon);
			}else{
				entityCombo.dataProvider=entityAC;
			}
		}
		
		private function onEntityChange():void{
			param['entityId'] = entityXML.Detail.(entityName==entityCombo.selectedLabel).entityId;
			httpGetPrograms.send(param);
		}
		
		private function resultGetPrograms(event:ResultEvent):void{
			programXML = event.result as XML;
			programAC.removeAll();
			for each (var object:Object in programXML.Detail){
				programAC.addItem({programName:object.programName});
			}
			if(programAC.length==0){
				Alert.show('Programs Not Found','Information',4,null,null,errorIcon);
			}else{
				programCombo.dataProvider=programAC;
			}
		}
		
		private function onProgramChange():void{
			param['entityId'] = entityXML.Detail.(entityName==entityCombo.selectedLabel).entityId;
			param['programId'] = programXML.Detail.(programName==programCombo.selectedLabel).programId;
			httpGetBranches.send(param);
			httpGetSpecializations.send(param);
			httpGetSemesters.send([new Date]);
		}
		
		private function resultGetBranches(event:ResultEvent):void{
			branchXML = event.result as XML;
			branchAC.removeAll();
			for each (var object:Object in branchXML.Detail){
				branchAC.addItem({branchName:object.branchName});
			}
			if(branchAC.length==0){
				Alert.show('Branches Not Found','Information',4,null,null,errorIcon);
			}else{
				branchCombo.dataProvider=branchAC;
			}
		}
		
		private function resultGetSpecializations(event:ResultEvent):void{
			specializationXML = event.result as XML;
			specializationAC.removeAll();
			for each (var object:Object in specializationXML.Detail){
				specializationAC.addItem({specializationName:object.specializationName});
			}
			if(specializationAC.length==0){
				Alert.show('Specializations Not Found','Information',4,null,null,errorIcon);
			}else{
				specializationCombo.dataProvider=specializationAC;
			}
		}
		
		private function resultGetSemesters(event:ResultEvent):void{
			semesterXML = event.result as XML;
			semesterAC.removeAll();
			for each (var object:Object in semesterXML.Detail){
				semesterAC.addItem({semesterName:object.semesterName});
			}
			if(semesterAC.length==0){
				Alert.show('Semesters Not Found In System Table Two','Information',4,null,null,errorIcon);
			}else{
				semesterCombo.dataProvider=semesterAC;
			}
		}
		
		private function revertConfirm():void{
			Alert.show('Are You Sure To Continue?','Confirmation',3,null,revertProcess,questionIcon);
		}
		
		private function revertProcess(event:CloseEvent):void{
			if(event.detail==Alert.YES){
				param['entityId'] = entityXML.Detail.(entityName==entityCombo.selectedLabel).entityId;
				param['programId'] = programXML.Detail.(programName==programCombo.selectedLabel).programId;
				param['branchId'] = branchXML.Detail.(branchName==branchCombo.selectedLabel).branchId;
				param['specializationId'] = specializationXML.Detail.(specializationName==specializationCombo.selectedLabel).specializationId;
				param['semesterId'] = semesterXML.Detail.(semesterName==semesterCombo.selectedLabel).semesterId;
				httpRevertResultProcess.send(param);
			}
		}
		
		private function resultRevertResultProcess(event:ResultEvent):void{
			successXML = event.result as XML;
			if(successXML.Exception == 'Reverted'){
				Alert.show('Successfully Reverted','Information',4,null,null,infoIcon);
			}
			if(successXML.Exception == 'Already Reverted'){
				Alert.show('Result Process Already Reverted','Information',4,null,null,infoIcon);
			}
			if(successXML.Exception == 'Exception'){
				Alert.show('Exception Occurs While Revert Process','Error',4,null,null,errorIcon);
			}
			entityCombo.selectedIndex=-1;
			programCombo.selectedIndex=-1;
			branchCombo.selectedIndex=-1;
			specializationCombo.selectedIndex=-1;
			semesterCombo.selectedIndex=-1;
		}
		
		private function onFailure(event:FaultEvent):void{
			Alert.show('Request Not Completed','Error',4,null,null,errorIcon);
		}
	]]>
</mx:Script>

	<mx:HTTPService id="httpGetEntities" method="post"
        url="{commonFunction.getConstants('url')}/revertResultProcess/getEntities.htm"
        resultFormat="e4x"
        result="resultGetEntities(event)"
        fault="onFailure(event)"
        showBusyCursor="true"
        useProxy="false"/>
        
    <mx:HTTPService id="httpGetPrograms" method="post"
        url="{commonFunction.getConstants('url')}/revertResultProcess/getPrograms.htm"
        resultFormat="e4x"
        result="resultGetPrograms(event)"
        fault="onFailure(event)"
        showBusyCursor="true"
        useProxy="false"/>
        
    <mx:HTTPService id="httpGetBranches" method="post"
        url="{commonFunction.getConstants('url')}/revertResultProcess/getBranches.htm"
        resultFormat="e4x"
        result="resultGetBranches(event)"
        fault="onFailure(event)"
        showBusyCursor="true"
        useProxy="false"/>
        
    <mx:HTTPService id="httpGetSpecializations" method="post"
        url="{commonFunction.getConstants('url')}/revertResultProcess/getSpecializations.htm"
        resultFormat="e4x"
        result="resultGetSpecializations(event)"
        fault="onFailure(event)"
        showBusyCursor="true"
        useProxy="false"/>
        
    <mx:HTTPService id="httpGetSemesters" method="post"
        url="{commonFunction.getConstants('url')}/revertResultProcess/getSemesters.htm"
        resultFormat="e4x"
        result="resultGetSemesters(event)"
        fault="onFailure(event)"
        showBusyCursor="true"
        useProxy="false"/>
        
    <mx:HTTPService id="httpRevertResultProcess" method="post"
        url="{commonFunction.getConstants('url')}/revertResultProcess/revertProcess.htm"
        resultFormat="e4x"
        result="resultRevertResultProcess(event)"
        fault="onFailure(event)"
        showBusyCursor="true"
        useProxy="false"/>
        
	<mx:Label x="82" y="47" text="Entity :" fontFamily="Georgia" fontWeight="bold" fontStyle="normal" color="#356816" fontSize="14"/>
	<mx:Label x="82" y="102" text="Program :" fontWeight="bold" fontStyle="normal" color="#356816" fontFamily="Georgia" fontSize="14"/>
	<mx:Label x="82" y="154" text="Branch :" fontWeight="bold" fontStyle="normal" color="#356816" fontFamily="Georgia" fontSize="14"/>
	<mx:Label x="82" y="209" text="Specialization :" fontWeight="bold" fontStyle="normal" color="#356816" fontFamily="Georgia" fontSize="14"/>
	<mx:Label x="82" y="263" text="Semester :" fontWeight="bold" fontStyle="normal" color="#356816" fontFamily="Georgia" fontSize="14"/>
	
	<mx:ComboBox x="259" y="46" height="28" width="242" id="entityCombo" color="#356816" labelField="entityName" change="onEntityChange();" selectedIndex="-1" prompt="----- SELECT -----" fontStyle="normal" fontSize="13" toolTip="{entityCombo.selectedItem.entityName}"></mx:ComboBox>
	<mx:ComboBox x="259" y="101" height="28" width="242" id="programCombo" color="#356816" labelField="programName" change="onProgramChange();" selectedIndex="-1" prompt="----- SELECT -----" fontStyle="normal" fontSize="13"></mx:ComboBox>
	<mx:ComboBox x="259" y="153" height="28" width="242" id="branchCombo" color="#356816" labelField="branchName" selectedIndex="-1" prompt="----- SELECT -----" fontStyle="normal" fontSize="13"></mx:ComboBox>
	<mx:ComboBox x="259" y="208" height="28" width="242" id="specializationCombo" color="#356816" labelField="specializationName" selectedIndex="-1" prompt="----- SELECT -----" fontStyle="normal" fontSize="13"></mx:ComboBox>
	<mx:ComboBox x="259" y="262" height="28" width="242" id="semesterCombo" color="#356816" labelField="semesterName" selectedIndex="-1" prompt="----- SELECT -----" fontStyle="normal" fontSize="13"></mx:ComboBox>
	<mx:Button x="90" y="323" label="REVERT" width="160" id="revertButton" fontStyle="normal" color="#356816" fontFamily="Georgia" fontSize="15" click="revertConfirm();"/>
	<mx:Button x="364" y="323" label="CANCEL" width="160" id="cancelButton" fontStyle="normal" fontWeight="bold" color="#356816" fontFamily="Georgia" fontSize="15" click="parentDocument.loaderCanvas.removeAllChildren()"/>
</mx:Panel>
