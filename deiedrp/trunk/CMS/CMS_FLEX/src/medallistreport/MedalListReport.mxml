<?xml version="1.0" encoding="utf-8"?>
<!--/**
 * @(#) MedalListReport.mxml
 * Copyright (c) 2011 EdRP, Dayalbagh Educational Institute.
 * All Rights Reserved.
 *
 * Redistribution and use in source and binary forms, with or
 * without modification, are permitted provided that the following
 * conditions are met:
 *
 * Redistributions of source code must retain the above copyright
 * notice, this  list of conditions and the following disclaimer.
 *
 * Redistribution in binary form must reproducuce the above copyright
 * notice, this list of conditions and the following disclaimer in
 * the documentation and/or other materials provided with the
 * distribution.
 *
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL ETRG OR ITS CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL,SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
 * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Contributors: Members of EdRP, Dayalbagh Educational Institute
 */-->
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
	 layout="absolute" width="736" height="282"
	  creationComplete="onCreationComplete()"
	   title="{commonFunction.getConstants('medallist')}" fontWeight="bold">

<mx:Script>
	<![CDATA[
		import common.Mask;
		import mx.validators.Validator;
		import mx.events.CloseEvent;
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.rpc.events.FaultEvent;
		import mx.rpc.events.ResultEvent;
		import common.commonFunction;		

		public var columns:Array;
		
		public var flag:Boolean = false;
		
		/**
		 * The method validates the input fields
		 * on the interface
		 **/ 
		public function validateInputFields():Boolean{
						
			sessionValidate.source = fromYearCombo;
			
			if(Validator.validateAll([sessionValidate]).length!=0){
				
				flag = false;
				
			}else{
				
				flag = true;
				
			}
			
			return flag;
			
		}
		
		
		/**
		 * The method sends a request to generate 
		 * report for the selected
		 * inputs
		 **/ 
		public function medalListReport():void{
			
			if((validateInputFields()==false)){
				
				Alert.show((commonFunction.getMessages('pleasecheckEntriesinRed')),
				(commonFunction.getMessages('error')),0,null,null,errorIcon);
				
			}else{
				
				Alert.show(commonFunction.getMessages('areyousure'),
				commonFunction.getMessages('confirm'),(Alert.YES|Alert.NO),null,onOK,questionIcon);	
				
			}			
		}		
		
		/**
		 * The method fired on the click of OK button
		 * */
		public function onOK(event:CloseEvent):void{
			
			if(event.detail==Alert.YES){				
				
				var fromSession:String;
			
				fromSession = sessionXML.role.(id==fromYearCombo.selectedLabel);
		
				infoObject["date"] = new Date;			
			
				infoObject["fromSession"] = sessionXML.role.(id.toString().substr(0,4)==fromYearCombo.selectedLabel).id;
				infoObject["toSession"] = sessionXML.role.(description.toString().substr(0,4)==toYearCombo.text).description;
		
				medalList.send(infoObject);				
				Mask.show(commonFunction.getMessages('pleaseWait'));
				
			}
			
		}
		
		/**
		 * The method is executed on failure of 
		 * a request
		 **/ 	
		public function onFailure(event:FaultEvent):void{
			
			//			var em:String=String(event.message);
//			if(em.search("ExceptionConverter: java.io.IOException: The document has no pages")>-1){
			Alert.show(commonFunction.getMessages('reportGenerated'),
					commonFunction.getMessages('success'),0,null,null,successIcon);
//			}
//			else{
//			Alert.show(commonFunction.getMessages('requestFailed'),
//			commonFunction.getMessages('failure'),0,null,null,errorIcon);	
//			}	
			Mask.close();	
		}
		
		
		
	]]>
</mx:Script>

<mx:Script source="asFiles/MedalListAction.as"/>

<mx:HTTPService id="medalList" method="post"
				url="{commonFunction.getConstants('url')}/resultReport/MedalListReport.htm"
				resultFormat="e4x" 
				fault="onFailure(event)" 
				useProxy="false"/> 
				
<mx:HTTPService id="getUniversitySessions" method="post"
				url="{commonFunction.getConstants('url')}/degreeList/getUniversitySession.htm"
				resultFormat="e4x" 
				result="getUniversitySessionList(event)" 
				fault="onFailure(event)" 
				useProxy="false"/>

	<mx:StringValidator id="sessionValidate" property="selectedItem" required="true"/> 
	<mx:Label x="10" y="12" text="{commonFunction.getConstants('fromyear')}"/>
	<mx:ComboBox x="145" y="10" id="fromYearCombo" prompt="{commonFunction.getConstants('select')}" selectedIndex="-1" change="onYearChange()" width="160"></mx:ComboBox>
	<mx:Label x="357" y="12" text="{commonFunction.getConstants('toyear')}"/>
	<mx:Label x="483" y="12" id="toYearCombo"></mx:Label>
	<mx:Button label="{commonFunction.getConstants('resetButton')}" verticalCenter="56" horizontalCenter="-131" id="resetButton" click="resetButtonClickHandler()"/>
	<mx:Button label="{commonFunction.getConstants('cancelButton')}" verticalCenter="56" horizontalCenter="44" click="this.parentDocument.loaderCanvas.removeAllChildren()"/>
	<mx:Button x="10" y="162" label="{commonFunction.getConstants('medallist')}" click="medalListReport()" width="125"/>
	
	
</mx:TitleWindow>
