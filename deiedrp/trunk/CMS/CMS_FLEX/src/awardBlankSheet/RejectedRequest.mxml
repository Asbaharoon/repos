<?xml version="1.0" encoding="utf-8"?>
<!--
/**
 * @(#) RejectedRequest.mxml
 * Copyright (c) 2011 EdRP, Dayalbagh Educational Institute.
 * All Rights Reserved.
 *
 * Redistribution and use in source and binary forms, with or
 * without modification, are permitted provided that the following
 * conditions are met:
 *
 * Redistributions of source code must retain the above copyright
 * notice, this  list of conditions and the following disclaimer.
 *
 * Redistribution in binary form must reproducuce the above copyright
 * notice, this list of conditions and the following disclaimer in
 * the documentation and/or other materials provided with the
 * distribution.
 *
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL ETRG OR ITS CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL,SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
 * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Contributors: Members of EdRP, Dayalbagh Educational Institute
 */
-->
<mx:TitleWindow layout="absolute" styleName="PopUpTitleWindow" xmlns:mx="http://www.adobe.com/2006/mxml" width="{rejectedListGrid.width+50}" height="400" 
	creationComplete="onCreationComplete()" title="{commonFunction.getConstants('rejectedAwardBlank')}" showCloseButton="true" close="PopUpManager.removePopUp(this);">
	<mx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;
			import mx.collections.ArrayCollection;
			import common.commonFunction;
			public var refFunc1:Function;
			public var refFunc2:Function;
			public var dataArray:ArrayCollection;
			
			public function onCreationComplete():void
			{
				rejectedListGrid.dataProvider=dataArray;
			}		 
		    
		]]>
	</mx:Script>
	
	<mx:AdvancedDataGrid id="rejectedListGrid" x="10" y="36" height="200" allowMultipleSelection="true" editable="true">
		<mx:columns>
			<mx:AdvancedDataGridColumn  rendererIsEditor="true" width="20" textAlign="center" editorDataField="selected" sortable="false" dataField="select" headerText="">
				<mx:itemRenderer>
					<mx:Component>
						<mx:CheckBox toolTip="{commonFunction.getConstants('select')}" click="data.select=event.currentTarget.selected; checkbox1ClickHandler(event, outerDocument.rejectedListGrid)"
							change="AdvancedGridOperations.editDeleteEnable(event,outerDocument.rejectedListGrid,[outerDocument.showButton],[new LinkButton])">
							<mx:Script>
								<![CDATA[
									import common.commonFunction;
			                        import mx.controls.LinkButton;
			                        import common.commonFunction;
									
									import mx.collections.ArrayCollection;
									import mx.containers.Grid;
									import mx.controls.*;
									import mx.graphics.IFill;
									import mx.logging.errors.InvalidFilterError;
										
									protected var arrayCollection:ArrayCollection;
									[Embed(source="/images/error.png")]private var errorIcon:Class;
									
									protected function checkbox1ClickHandler(event:Event, grid:AdvancedDataGrid):void
									{	
									var currentIndex:int=grid.selectedIndex;
									var parseIndex:int=0;
									var j:int=0;
									
									var gridrecords:ArrayCollection=AdvancedGridOperations.getSelectedRowData(outerDocument.rejectedListGrid);
									
									if(gridrecords.length==0){
										outerDocument.reasonTA.text="";										
									}
									else if(gridrecords.length>1)
									{
				            	    	Alert.show("Select Only 1 Record","warning",0,null,null,errorIcon);
				            	    }
				            	    else{
										for each(var obj:Object in grid.dataProvider)
										{
											if(obj.select==true){
												var gridData:ArrayCollection=AdvancedGridOperations.getSelectedRowData(outerDocument.rejectedListGrid);
													outerDocument.reasonTA.text=gridData.getItemAt(0).reason;
											}
										}
									
										for each(var object:Object in grid.dataProvider)
										{
											var bool:Boolean=false;
											bool=object.select;
											if(parseIndex==currentIndex)
											{
												bool=event.currentTarget.selected;
												object.select=false;
											}
											if(bool)
											{
												
											}
											parseIndex++;
										}
				            	    }
								}										
								
								 ]]>
						    </mx:Script>
						</mx:CheckBox>
					</mx:Component>
				</mx:itemRenderer>
			</mx:AdvancedDataGridColumn>
			<mx:AdvancedDataGridColumn showDataTips="true" headerText="{commonFunction.getConstants('courseCode')}" dataField="courseCode" width="100" editable="false" textAlign="center"/>
			<mx:AdvancedDataGridColumn showDataTips="true" headerText="{commonFunction.getConstants('courseName')}" dataField="courseName" width="200" editable="false" textAlign="center"/>
			<mx:AdvancedDataGridColumn showDataTips="true" headerText="Award Blank Type" dataField="displayTypeDescription" width="140" editable="false" textAlign="center"/>
			<mx:AdvancedDataGridColumn showDataTips="true" headerText="Rejector" dataField="employeeName" width="200" editable="false" textAlign="center"/>
		</mx:columns>		
	</mx:AdvancedDataGrid>
	<mx:LinkButton x="150" y="324" label="{commonFunction.getConstants('displayPDF')}" id="showButton" enabled="false" click="refFunc1('RJ');refFunc2();"/>
	<mx:LinkButton x="406" y="324" label="{commonFunction.getConstants('cancelButton')}" id="cancelPendingButton" enabled="true" 
		click="PopUpManager.removePopUp(this);rejectedListGrid.dataProvider=null"/>
	<mx:Label x="17" y="265" text="{commonFunction.getConstants('reasonOfReject')}"/>
	<mx:TextArea x="159" y="264" id="reasonTA" editable="false" width="300"/>		
</mx:TitleWindow>

