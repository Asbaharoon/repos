<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://www.ibatis.com/dtd/sql-map-2.dtd">

	<!--  ExternalExaminarDetail.xml  /*-->
	<!-- *Copyright (c) 2011 EdRP, Dayalbagh Educational Institute.-->
	<!-- * All Rights Reserved.-->
	<!-- *-->
	<!-- * Redistribution and use in source and binary forms, with or-->
	<!--
		* without modification, are permitted provided that the following
	-->
	<!-- * conditions are met:-->
	<!-- *-->
	<!-- * Redistributions of source code must retain the above copyright-->
	<!-- * notice, this  list of conditions and the following disclaimer.-->
	<!-- *-->
	<!--
		* Redistribution in binary form must reproduce the above copyright
	-->
	<!--
		* notice, this list of conditions and the following disclaimer in
	-->
	<!-- * the documentation and/or other materials provided with the-->
	<!-- * distribution.-->
	<!-- *-->
	<!-- *-->
	<!--
		* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
	-->
	<!--
		* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
	-->
	<!-- * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE-->
	<!--
		* DISCLAIMED. IN NO EVENT SHALL ETRG OR ITS CONTRIBUTORS BE LIABLE
	-->
	<!-- * FOR ANY DIRECT, INDIRECT, INCIDENTAL,SPECIAL, EXEMPLARY, OR-->
	<!--
		* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
	-->
	<!--
		* OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
	-->
	<!--
		* BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
		LIABILITY,
	-->
	<!--
		* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
	-->
	<!--
		* OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
	-->
	<!-- * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.-->
	<!-- *-->
	<!-- * Contributors: Members of EdRP, Dayalbagh Educational Institute-->
	<!-- */-->
	
	<sqlMap namespace="externalExaminarDetail">
	<typeAlias alias="externalExaminarDetail"
		type="in.ac.dei.edrp.cms.domain.externalexaminercourse.ExternalExaminerCourseInfoGetter" />
		
		
	<insert id="insertDetail" >
	INSERT INTO external_examinar_detail (examinar_id,prefix,first_name,middle_name,last_name,gender,department,designation,college_name,college_add,insert_time,creator_id,university_code)
    VALUES(#examinarId#,#prefix#,#firstName#,#middleName#,#lastName#,#gender#,#department#,#designation#,#collegeName#,#collegeAddress#,now(),#userId#,#universityCode#);
	</insert>
	
	<insert id="inputpermanentaddressdetails">

		insert into external_address ( address_key,
		address, city, state, pincode,
		office_phone, mobile_phone,
		fax, insert_time,
		creator_id,examinar_id)
		values(
		#permanentAddressKey#,
		#permanentAddress#,
		#permCity#,
		#permState#,
		#pinCode#,
		#officePhoneNumber#,
		#mobilePhoneNumber#,
		#faxNumber#,
		now(),
		#userId#,
		#examinarId#);

	</insert>

	<insert id="inputcoresspondenceaddressdetails">
		insert into external_address ( address_key,
		address, city, state, pincode,
		office_phone, mobile_phone,
		fax, insert_time,
		creator_id,examinar_id)
		values(
		#coresAddresskey#, #corsAddress#,
		#corsCity#,
		#corsState#, #corsPinCode#,
		#officePhoneNumber#,
		#mobilePhoneNumber#,
		#faxNumber#,
		now(),
		#userId#,
		#examinarId#);

	</insert>
	
	<select id="getExaminarId" resultClass="externalExaminarDetail">
	SELECT examinar_id as examinarId  FROM external_examinar_detail where university_code=#universityCode# ;
	</select>
	
	<select id="getExaminarDetail" resultClass="externalExaminarDetail">
	select prefix as prefix, examinar_id as examinarId,first_name AS firstName,middle_name as middleName,last_name as lastName,gender as gender,
	department as department,college_name as collegeName,college_add as collegeAddress,designation as designation
	FROM external_examinar_detail
	WHERE first_name LIKE #extName# AND examinar_id LIKE #extCode# AND university_code=#universityCode#;
	</select>
	
	<select id="getAddressDetails" resultClass="externalExaminarDetail">
	select address_key as addressKey,address as address,city as city ,state as state,pincode as pinCode,fax as faxNumber,
    office_phone as officePhoneNumber,mobile_phone as mobilePhoneNumber
 	from external_address
 	WHERE examinar_id=#examinarCode#;
	</select>
	
	 <delete id="deleteDetail">
     DELETE FROM external_examinar_detail
     WHERE examinar_id=#examinarId# and university_code=#universityCode# ;
 </delete>
 	 <delete id="deleteAddressDetail">
     DELETE FROM external_address
     WHERE examinar_id=#examinarId#;
 </delete>
<update id="updateDetail">
update external_examinar_detail
SET gender=#gender# ,designation=#designation#,department=#department#,college_name=#collegeName#,
college_add=#collegeAddress#,modification_time=now(),modifier_id=#userId#,prefix=#prefix#
where examinar_id=#examinarId# and university_code=#universityCode#;
</update>

<update id="updatepermanentaddressdetails">
update external_address
SET address=#permanentAddress#,city=#permCity#,state=#permState#,pincode=#pinCode#,office_phone=#officePhoneNumber#,
    mobile_phone=#mobilePhoneNumber#,fax=#faxNumber#,modification_time=now(),modifier_id=#userId#
Where examinar_id=#examinarId# AND address_key='PER';
</update>

<update id="updatecoresspondenceaddressdetails">
update external_address
SET address=#corsAddress#,city=#corsCity#,state=#corsState#,pincode=#corsPinCode#,office_phone=#officePhoneNumber#,
    mobile_phone=#mobilePhoneNumber#,fax=#faxNumber#,modification_time=now(),modifier_id=#userId#
Where examinar_id=#examinarId# AND address_key='COR';
</update>
	</sqlMap>