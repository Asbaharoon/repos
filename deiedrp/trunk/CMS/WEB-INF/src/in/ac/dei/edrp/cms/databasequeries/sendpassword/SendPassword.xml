<?xml version="1.0" encoding="UTF-8"?>
<!--
* @(#) SendPassword.xml
* @Author :Mohd Amir
* @Date :21/3/2011
* Version 1.0
* Copyright (c) 2011 EdRP, Dayalbagh Educational Institute.
* All Rights Reserved.
*
* Redistribution and use in source and binary forms, with or
* without modification, are permitted provided that the following
* conditions are met:
*
* Redistributions of source code must retain the above copyright
* notice, this list of conditions and the following disclaimer.
*
* Redistribution in binary form must reproducuce the above copyright
* notice, this list of conditions and the following disclaimer in
* the documentation and/or other materials provided with the
* distribution.
*
*
* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL ETRG OR ITS CONTRIBUTORS BE LIABLE
* FOR ANY DIRECT, INDIRECT, INCIDENTAL,SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
* OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
* BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
* OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
* EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*
* Contributors: Members of EdRP, Dayalbagh Educational Institute
*/
-->
<!DOCTYPE sqlMap     
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="sendPassword">

	<typeAlias alias="sendPasswordBean"
		type="in.ac.dei.edrp.cms.domain.sendpassword.SendPasswordInfoGetter" />
	
	<select id="getUserList" resultClass="sendPasswordBean">
	    SELECT entity_id as entity, program_id as program,
	    branch_id as branch, specialization_id as specialization,
	    stt.component_description as userGroupName, user_id as userId,
	    semester_code as semester, email_id as emailId, AIOrUI as AIorUI,
	    user_group_id as userGroupId,user_name as userName,et.creator_id as creatorId
	    FROM email_table et,system_table_two stt
	    WHERE is_ready='Y' and stt.component_code=et.user_group_id
	    and stt.group_code='UNROLE' and stt.university_code=#universityId#;
	</select>
	
	<insert id="setEmailTableData">
		INSERT INTO email_table
		(user_id,entity_id,program_id,branch_id,specialization_id,semester_code,
		user_group_id,user_name,email_id,AIOrUI,is_ready,insert_time,creator_id)
		VALUES
		(#userId#,#entity#,#program#,#branch#,#specialization#,#semester#,
		#userGroupId#,#userName#,#emailId#,#AIorUI#,#isReady#,now(),#creatorId#);
	</insert>
	
	<delete id="deleteEmailEntry">
	DELETE FROM email_table
	WHERE user_id=#userId#
	</delete>
	
	<update id="updateUserStatus">
	UPDATE user_info
	SET status='ACT',modified_timestamp=now()
	WHERE user_id=#userId# and status='INA' and university_code=#universityId#;
	</update>
	
	<update id="updateApplicantStatus">
	UPDATE applicant_info
	SET status='ACT',modified_timestamp=now()
	WHERE student_id=#userId# and status='INA' and university_code=#universityId#;
	</update>
	
	<!-- Application Added by Dheeraj on 7/2/2012 -->
	<insert id="setUserInfo">
	INSERT into user_info(user_id,user_name,password,status,registered_timestamp,university_code,user_group_id,application)
	VALUES(#userId#,#userName#,sha1(#password#),'ACT',now(),#universityId#,#userGroupId#,#application#)
	</insert>
	
	<insert id="setApplicantInfo">
	INSERT into applicant_info(student_id,user_name,password,status,user_group_id,creator_id,university_code)
	VALUES(#userId#,#userName#,sha1(#password#),'ACT',#userGroupId#,#creatorId#,#universityId#)
	</insert>
	
</sqlMap>