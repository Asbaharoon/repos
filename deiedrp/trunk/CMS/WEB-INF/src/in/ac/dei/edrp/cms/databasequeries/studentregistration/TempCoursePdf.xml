<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://www.ibatis.com/dtd/sql-map-2.dtd">
    
    <sqlMap namespace="tempCoursePdf">
    	<typeAlias alias="studentTempInfo" type="in.ac.dei.edrp.cms.domain.studentregistration.StudentInfoGetter"/>
    	<typeAlias alias="previousSemester" type="in.ac.dei.edrp.cms.utility.PreviousSemesterDetail" />
    	
    	<select id="getPersonalInfo" resultClass= "studentTempInfo">
    	SELECT tsp.registration_number AS registrationNumber,concat_ws(' ',first_name,middle_name,last_name) AS studentName , concat_ws(' ',father_first_name,father_middle_name,father_last_name) AS fatherName,
		concat_ws(' ',mother_first_name,mother_middle_name,mother_last_name) AS motherName,primary_email_id AS primaryEmailId,tsm.student_id AS studentId
		from temp_student_master tsm,temp_student_program tsp WHERE tsm.student_id = tsp.student_id
		AND tsp.entity_id = #entityId# AND program_id = #programId# AND branch_id = #branchId# AND specialization_id = #specializationId#
		AND to_semester_start_date = #semesterStartDate# AND to_semester_end_date = #semesterEndDate#;    	
    	</select>
    	
    	<select id="getStudentCourses" resultClass="studentTempInfo">
    	SELECT tsc.course_code AS courseCode,course_name AS courseName FROM temp_student_courses tsc,course_master cm
		WHERE tsc.course_code = cm.course_code AND tsc.student_id = #studentId# AND semester_start_date = #semesterStartDate# AND
		semester_end_date = #semesterEndDate#;
    	</select>
    	
    	<select id = "getPersonalInfoForNewStudent" resultClass="studentTempInfo">
    	
    	select substr(tsp.entity_id,5,8) as entityNumber,pm.program_code AS programCode,tsp.branch_id AS branchId,tsp.roll_number AS rollNumber,
		concat_ws(' ',tsm.first_name,tsm.middle_name,tsm.last_name) AS studentName,tsm.category,tsp.enrollment_number AS enrollmentNumber,tsm.gender,
		tsp.attempt_number AS attemptNumber,tsp.specialization_id AS specializationId,
		registration_number AS registrationNumber,admission_mode AS admissionMode,
		old_entity_id AS oldEntityId,old_program_id AS oldProgramId,old_branch_id AS oldBranchCode,old_specialization_id AS oldSpecialization,from_semester AS oldSemester,
		tsp.student_id AS studentId,ptd.semester_sequence AS semesterSequence,
		tsm.university_code AS universityCode,pm.print_aggregate AS printAggregate
 		FROM temp_student_program tsp,temp_student_master tsm,program_term_details ptd,program_master pm
 		WHERE tsp.entity_id = #entityId# AND tsp.program_id = #programId# AND tsp.branch_id = #branchId#
		AND tsp.specialization_id = #specializationId# AND tsp.to_semester = #semesterCode# AND tsp.to_semester_start_date = #semesterStartDate# 
		AND tsp.to_semester_end_date = #semesterEndDate# AND tsp.registration_status not in ('R','E')
		AND tsm.student_id = tsp.student_id AND ptd.program_id = #programId# AND ptd.semester_code = #semesterCode# AND
		semester_start_date = date_format(#semesterStartDate#,'%m-%d') AND pm.program_id = tsp.program_id and tsm.university_code=#universityId#;
		
    	
    	</select>
    	
    	<select id = "getPersonalInfoForExtendedList" resultClass="studentTempInfo">
    	
    	select substr(tsp.entity_id,5,8) as entityNumber,pm.program_code AS programCode,tsp.branch_id AS branchId,tsp.roll_number AS rollNumber,
		concat_ws(' ',tsm.first_name,tsm.middle_name,tsm.last_name) AS studentName,tsm.category,tsp.enrollment_number AS enrollmentNumber,tsm.gender,
		tsp.attempt_number AS attemptNumber,tsp.specialization_id AS specializationId,
		registration_number AS registrationNumber,admission_mode AS admissionMode,
		old_entity_id AS oldEntityId,old_program_id AS oldProgramId,old_branch_id AS oldBranchCode,old_specialization_id AS oldSpecialization,from_semester AS oldSemester,
		tsp.student_id AS studentId,status AS statusInSemester,ptd.semester_sequence AS semesterSequence,
		tsm.university_code AS universityCode,pm.print_aggregate AS printAggregate
 		FROM temp_student_program tsp,temp_student_master tsm,program_term_details ptd,program_master pm,student_registration_semester_header srsh
 		WHERE tsp.entity_id = #entityId# AND tsp.program_id = #programId# AND tsp.branch_id = #branchId#
		AND tsp.specialization_id = #specializationId# AND tsp.to_semester = #semesterCode# AND tsp.to_semester_start_date = #semesterStartDate# 
		AND tsp.to_semester_end_date = #semesterEndDate# AND tsp.registration_status not in ('R','E')
		AND tsm.student_id = tsp.student_id AND ptd.program_id = #programId# AND ptd.semester_code = #semesterCode# AND
		semester_start_date = date_format(#semesterStartDate#,'%m-%d') AND pm.program_id = tsp.program_id 
		and srsh.session_start_date=tsp.to_semester_start_date and srsh.session_end_date=tsp.to_semester_end_date and srsh.roll_number=tsp.roll_number and tsm.university_code=#universityId#;
    	
    	</select>
    	
    	
    	
    	<select id = "getCourseListForNew" resultClass="studentTempInfo">
    	
   		SELECT tsc.course_code AS courseCode,cm.course_name AS courseName FROM temp_student_courses tsc,course_master cm
		WHERE tsc.course_code = cm.course_code AND tsc.registration_number=#registrationNumber# AND semester_start_date = #semesterStartDate# AND
		semester_end_date = #semesterEndDate#;
    	    	
    	</select>
    	
    	<select id="getCourseListForSwtOrNor" resultClass="studentTempInfo">
    	
    	SELECT tsc.course_code AS courseCode,cm.course_name AS courseName FROM temp_student_courses tsc,course_master cm
		WHERE tsc.course_code = cm.course_code AND tsc.enrollment_number=#enrollmentNumber# AND semester_start_date = #semesterStartDate# AND
		semester_end_date = #semesterEndDate#;
    	
    	</select>
    	
    
    	<select id = "getCourseWithRemedial" resultClass="studentTempInfo">    	    
		
		select course_code AS courseCode FROM student_course WHERE
		roll_number = (select roll_number FROM student_program WHERE enrollment_number = #enrollmentNumber#
		AND entity_id = #oldEntityId# AND program_id = #oldProgramId# AND branch_id = #oldBranchCode# AND specialization_id = #oldSpecialization#
		AND current_semester = #oldSemester# group by (roll_number))
		AND program_course_key = (select program_course_key FROM program_course_header WHERE program_id=#oldProgramId#
		AND branch_id = #oldBranchCode# AND specialization_id = #oldSpecialization#
		AND semester_code =#oldSemester# AND semester_status = 'ACT') AND student_status = 'REM';
    	
    	</select>
    	
    	<select id="getPreviousSemesterMarks" resultClass="studentTempInfo">
    	
    	SELECT sa.roll_number AS rollNumber,sa.theory_sgpa AS aggregateTheory,sa.practical_sgpa AS aggregatePractical 
    	FROM student_program sp,student_aggregate sa
 		WHERE sp.entity_id = #oldEntityId# AND program_id = #oldProgramId# AND branch_id = #oldBranchCode# AND specialization_id = #oldSpecialization#
		AND current_semester = #oldSemester# AND enrollment_number = #enrollmentNumber# AND sp.roll_number = sa.roll_number AND sa.program_course_key = (select program_course_key FROM program_course_header WHERE program_id=#oldProgramId#
		AND branch_id = #oldBranchCode# AND specialization_id = #oldSpecialization#
		AND semester_code =#oldSemester# AND semester_status = 'ACT') ;
    	
    	</select>
    	
    	<select id="getPreviousSemesterMarks1" resultClass="studentTempInfo">
    	
    	SELECT sa.roll_number AS rollNumber,sa.sgpa AS aggregateTheory 
    	FROM student_program sp,student_aggregate sa
 		WHERE sp.entity_id = #oldEntityId# AND program_id = #oldProgramId# AND branch_id = #oldBranchCode# AND specialization_id = #oldSpecialization#
		AND current_semester = #oldSemester# AND enrollment_number = #enrollmentNumber# AND sp.roll_number = sa.roll_number AND sa.program_course_key = (select program_course_key FROM program_course_header WHERE program_id=#oldProgramId#
		AND branch_id = #oldBranchCode# AND specialization_id = #oldSpecialization#
		AND semester_code =#oldSemester# AND semester_status = 'ACT') ;
    	
    	</select>
    	
    	<!-- ================================================================= -->
		<!-- final registration chart query starts from here                   -->
		<!-- @author Ashish Mohan                                              -->
		<!-- ================================================================= -->
    	
    	<select id = "getPersonalInfoForMainExtendedList" resultClass="studentTempInfo">
    	
    	Select (select entity_code from entity_master where entity_id=sp.entity_id) as entityNumber,pm.program_code AS programCode,
		sp.branch_id AS branchId,sp.roll_number AS rollNumber,sp.mode_of_entry AS modeOfEntry,
 		concat_ws(' ',sm.student_first_name,sm.student_middle_name,sm.student_last_name) AS studentName,sm.category_code AS category,sp.enrollment_number AS enrollmentNumber
	 	,sm.gender,   srsh.attempt_number AS attemptNumber,sp.in_semester AS inSemester,
    	sp.roll_number AS registrationNumber,   sp.entity_id AS entityId,srsh.switch_rule AS switchNumber,srsh.switch_type AS switchedDate,
    	sp.program_id AS programId,sp.branch_id AS branchCode,sp.specialization_id AS newSpecialization, 
    	current_semester AS semesterCode,   sm.student_id AS studentId,srsh.status AS statusInSemester,srsh.session_start_date AS semesterStartDate,
    	ptd.semester_sequence AS semesterSequence,sm.university_code AS universityCode,pm.print_aggregate AS printAggregate,srsh.program_course_key AS programCourseKey,
    	(select semester_code from program_term_details where program_id=#programId# and semester_group in (select semester_group from program_term_details 
    	where program_id=#programId# and semester_code=#semesterCode#) order by semester_sequence desc limit 1) AS semester 
     	FROM student_program sp,student_master sm,
   		program_term_details ptd,program_master pm,student_registration_semester_header srsh   WHERE  sp.entity_id =#entityId#
    	AND sp.program_id = #programId# AND sp.branch_id = #branchId#   AND sp.specialization_id = #specializationId# AND sp.current_semester =  #semesterCode#
   		AND pm.program_id = sp.program_id
        and srsh.status not in ('YTR') and srsh.roll_number=sp.roll_number AND ptd.program_id =#programId# and sp.program_status in ('ACT','PAS')
     	AND ptd.semester_code = #semesterCode# AND sm.enrollment_number = sp.enrollment_number AND ptd.semester_sequence=#sequenceNumber#  AND srsh.session_start_date = #semesterStartDate#
		AND srsh.session_end_date = #semesterEndDate# and sm.university_code=#universityId#;
    	
    	</select>
    	
     	<sql id="previousPCK">
     		<![CDATA[
    			SELECT srsh.program_course_key as programCourseKey,
		    	srsh.session_start_date AS semesterStartDate,srsh.session_end_date AS semesterEndDate
		    	FROM student_registration_semester_header srsh
				where srsh.roll_number = #rollNumber# and
				srsh.session_start_date = (select max(srsh1.session_start_date)
				from student_registration_semester_header srsh1
				where srsh1.program_course_key <> #programCourseKey# and srsh1.status  in ('PAS' ,'REM','UFM','INC','REG') and  srsh1.roll_number = #rollNumber#
				and session_start_date < #semesterStartDate#  ) and srsh.status not in ('YTR','WTH')
		  	]]>
	 	</sql>
    	
    	<select id="getMainCourseList" resultClass="studentTempInfo">
    	select course_code AS courseCode FROM student_course WHERE
		roll_number = #rollNumber# AND semester_start_date=#semesterStartDate#
		AND program_course_key = #programCourseKey# ;
    	</select>
    	
    	<select id = "getCourseWithRemedialMain" resultClass="studentTempInfo">    	    
		select set2.course_code AS courseCode from 
		(select * FROM student_course WHERE
		roll_number = #rollNumber# AND student_status = 'REM')set2 join
		(<include refid="previousPCK"/>)set1
		on set2.program_course_key=set1.programCourseKey and set2.semester_start_date=set1.semesterStartDate; ;
    	</select>
    	

    	<!--  <select id="getPreviousSemesterMarksMain" resultClass="studentTempInfo">
    	SELECT sa.roll_number AS rollNumber,sa.theory_sgpa AS aggregateTheory,sa.practical_sgpa AS aggregatePractical 
    	FROM student_program sp,student_aggregate sa,(<include refid="previousPCK"/>)set1
 		WHERE sp.entity_id = #entityId# AND program_id = #programId# AND branch_id = #branchCode# AND specialization_id = #newSpecialization#
		AND current_semester = #semesterCode# AND enrollment_number = #enrollmentNumber# AND sp.roll_number = sa.roll_number AND 
		sa.program_course_key=set1.programCourseKey and sa.semester_start_date=set1.semesterStartDate;
		 (case when (#programId#=#oldProgramId# AND #branchCode#=#oldBranchCode# AND #newSpecialization#=#oldSpecialization#) then (select program_course_key FROM program_course_header 
		WHERE program_id=#oldProgramId#
		AND branch_id = #oldBranchCode# AND specialization_id = #oldSpecialization#
		AND semester_code =#oldSemester# AND semester_status = 'ACT') else(select program_course_key FROM program_course_header 
		WHERE program_id=#programId#
		AND branch_id = #branchCode# AND specialization_id = #newSpecialization#
		AND semester_code =#oldSemester# AND semester_status = 'ACT')end) ; 
    	</select>
    	<select id="getPreviousSemesterMarksMain1" resultClass="studentTempInfo">
    	SELECT sa.roll_number AS rollNumber,sa.sgpa AS aggregateTheory 
    	FROM student_program sp,student_aggregate sa,(<include refid="previousPCK"/>)set1
 		WHERE sp.entity_id = #entityId# AND program_id = #programId# AND branch_id = #branchCode# AND specialization_id = #newSpecialization#
		AND current_semester = #semesterCode# AND enrollment_number = #enrollmentNumber# AND sp.roll_number = sa.roll_number AND 
		sa.program_course_key=set1.programCourseKey and sa.semester_start_date=set1.semesterStartDate;
    	</select> -->
    	
    	
    	<resultMap id="PreviouspckDetails" class="previousSemester">
		<result property="numberOfRemedials" column="srsh.number_of_remedials" />
		<result property="sgpa" column="srsh.sgpa" />
		<result property="cumulativeWeighted" column="srsh.weighted_percentage" />
		<result property="previousSemesterStartDate" column="srsh.session_start_date" />
		<result property="previousSemesterEndDate" column="srsh.session_end_date" />
		<result property="programCourseKey" column="srsh.program_course_key" />
		<result property="theorySGPAPoint" column="sa.theory_sgpa" />
		<result property="practicalSGPAPoint" column="sa.practical_sgpa" />
		<result property="theoryEarnedCredit" column="sa.earned_theory_credit" />
		<result property="practicalEarnedCredit" column="sa.earned_practical_credit" />
		<result property="theoryCGPAPoint" column="sa.point_secured_theory_cgpa" />
		<result property="practicalCGPAPoint" column="sa.point_secured_practical_cgpa" />
		<result property="theoryEarnedCgpaCredit" column="sa.earned_theory_credit_cgpa" />
		<result property="practicalEarnedCgpaCredit" column="sa.earned_practical_credit_cgpa" />
		</resultMap>
	
		<select id="previousgrade" resultMap="PreviouspckDetails">
		select
		srsh.number_of_remedials,srsh.sgpa,srsh.weighted_percentage,srsh.session_start_date,srsh.session_end_date,
		srsh.program_course_key,sa.theory_sgpa,sa.practical_sgpa,
		sa.earned_theory_credit,sa.earned_practical_credit,sa.point_secured_theory_cgpa,sa.point_secured_practical_cgpa,
		sa.earned_theory_credit_cgpa,sa.earned_practical_credit_cgpa
		from student_registration_semester_header srsh,
		student_aggregate sa where srsh.roll_number=#rollNumber# and srsh.status in
		('PAS','REM','FAL') and srsh.entity_id=#entityId# and
		srsh.program_course_key=sa.program_course_key
		and srsh.session_start_date=sa.semester_start_date and
		srsh.session_end_date=sa.semester_end_date and
		srsh.roll_number=sa.roll_number and  srsh.program_course_key = #programCourseKey# and srsh.session_start_date=#previousSemesterStartDate#
		and srsh.session_end_date=#previousSemesterEndDate#;
   		</select>
    	

</sqlMap>
