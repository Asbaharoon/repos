<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://www.ibatis.com/dtd/sql-map-2.dtd">

	<!--    /*-->
	<!-- *Copyright (c) 2011 EdRP, Dayalbagh Educational Institute.-->
	<!-- * All Rights Reserved.-->
	<!-- *-->
	<!-- * Redistribution and use in source and binary forms, with or-->
	<!--
		* without modification, are permitted provided that the following
	-->
	<!-- * conditions are met:-->
	<!-- *-->
	<!-- * Redistributions of source code must retain the above copyright-->
	<!-- * notice, this  list of conditions and the following disclaimer.-->
	<!-- *-->
	<!--
		* Redistribution in binary form must reproduce the above copyright
	-->
	<!--
		* notice, this list of conditions and the following disclaimer in
	-->
	<!-- * the documentation and/or other materials provided with the-->
	<!-- * distribution.-->
	<!-- *-->
	<!-- *-->
	<!--
		* THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
	-->
	<!--
		* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
	-->
	<!-- * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE-->
	<!--
		* DISCLAIMED. IN NO EVENT SHALL ETRG OR ITS CONTRIBUTORS BE LIABLE
	-->
	<!-- * FOR ANY DIRECT, INDIRECT, INCIDENTAL,SPECIAL, EXEMPLARY, OR-->
	<!--
		* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
	-->
	<!--
		* OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
	-->
	<!--
		* BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
		LIABILITY,
	-->
	<!--
		* WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
	-->
	<!--
		* OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
	-->
	<!-- * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.-->
	<!-- *-->
	<!-- * Contributors: Members of EdRP, Dayalbagh Educational Institute-->
	<!-- */-->


<sqlMap namespace="moucourses">
	<typeAlias alias="moucourses"
		type="in.ac.dei.edrp.cms.domain.moucourses.MouCoursesInfoGetter" />

	<resultMap id="mouUniversities" class="moucourses">

		<result property="componentId" column="component_code" />
		<result property="componentDescription" column="component_description" />

	</resultMap>

	<select id="getMouUniversity" resultMap="mouUniversities">

		select
		uni.university_code as
		component_code,uni.university_name as
		component_description from
		university_master
		uni,mou_university mou
		where
		uni.university_code=mou_university_code AND
		mou.university_code=#universityCode# AND uni.current_status=1;
	
	</select>

	<select id="getMouCourses" resultMap="mouUniversities">

		select course_code as
		component_code,course_name as component_description from
		course_master
		where
		university_code=#mouUniversityId# AND course_code NOT IN(select
		course_code
		from mou_courses where
		mou_university_code=#mouUniversityId# AND
		university_code=#universityCode#);
	
	</select>

	<insert id="setMOUCourse">

		insert into mou_courses
		(course_code,mou_university_code,status,insert_time,creator_id,university_code)
		values(#courseCode#,#mouUniversityId#,'ACT',now(),#userId#,#universityCode#);
	
	</insert>

	<resultMap id="definedRecords" class="moucourses">

		<result property="mouUniversityId" column="university_code" />
		<result property="mouUniversityName" column="university_name" />
		<result property="courseCode" column="course_code" />
		<result property="courseName" column="course_name" />
		<result property="courseStatus" column="status" />

	</resultMap>

	<select id="getMOURecords" resultMap="definedRecords">

		select distinct
		uni.university_code,uni.university_name,crs.course_code,crs.course_name,mou.status
		from
		university_master uni,mou_courses mou,course_master crs
		where
		uni.university_code=mou.mou_university_code AND
		mou.mou_university_code=#mouUniversityId#
		AND
		mou.course_code=crs.course_code AND
		mou.university_code=#universityCode# AND uni.current_status=1;
	
	</select>

	<update id="updateMOUCourse">

		update mou_courses SET
		status=#courseStatus#,modifier_id=#userId#,modification_time=now()
		where course_code=#courseCode# AND
		mou_university_code=#mouUniversityId#
		AND
		university_code=#universityCode#;
	
	</update>

	<delete id="deleteMOURecords">

		delete from mou_courses where
		course_code=#courseCode# AND mou_university_code=#mouUniversityId# AND
		university_code=#universityCode#;
	
	</delete>

</sqlMap>