/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package in.ac.dei.mhrd.omr;


import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;
import org.apache.log4j.xml.DOMConfigurator;

/** 
 * MyEclipse Struts
 * Creation date: 12-02-2010
 * @author Anshul Agarwal
 *
 * XDoclet definition:
 * @struts.action path="/manageWrongQues" name="manageWrongQues" input="/manageWrongQues.jsp" validate="true"
 * @struts.action-forward name="editWrongQues" path="/delQues.jsp"
 * 
 * This class defines the method that retrieves the existing wrong questions of the selected test
 */
public class ManageWrongQuesAction extends Action {
	/*
	 * Generated Methods
	 */
	private static Logger log = Logger.getLogger(ManageWrongQuesAction.class);

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * This function retrieves the existing wrong questions of the selected test
	 */
	
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ManageWrongQuesForm manageWrongQues = (ManageWrongQuesForm) form;// TODO Auto-generated method stub
		System.out.println("inside action wrong");
		
		//This function accepts the testname as parameter and returns the list of existing wrong questions 
		
		ArrayList<ExistingWrongQues> qnoList = ExistingWrongQues.getWrongQues(manageWrongQues.getTestName()); 	
		if(qnoList.size()==0){
			System.out.println("list size 0");
			log.info("Wrong Ques not retrieved");
			request.setAttribute("wrongmsg", "No mis printed Question entered for this test");
			return mapping.findForward("WrongQ");
		}
		else{
		
		request.setAttribute("testName", manageWrongQues.getTestName());
		request.setAttribute("qnoList", qnoList);
	
		return mapping.findForward("editWrongQues");
		}
		}
	}
