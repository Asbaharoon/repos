/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package in.ac.dei.mhrd.omr;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import in.ac.dei.mhrd.omr.img.*;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import org.apache.log4j.Logger;
import org.apache.log4j.PropertyConfigurator;
import org.apache.log4j.xml.DOMConfigurator;


/** 
 * MyEclipse Struts
 * Creation date: 12-21-2010
 * @author Anshul Agarwal
 * XDoclet definition:
 * @struts.action path="/selectCorrect" name="selectCorrectAns" input="/SelectCorrectAnsJsp.jsp" scope="request" validate="true"
 * @struts.action-forward name="fillCorrectAns" path="/fllAnswer.jsp"
 * This class fetches sectionwise detail of the testname, 
 * selected for uploading correct Answers, 
 * from the database.
 */
public class SelectCorrectAnswerAction extends Action {
	
	private static Logger log = Logger.getLogger(SelectCorrectAnswerAction.class);

	/*
	 * Generated Methods
	 */

	/** 
	 * This method fetches the testname selected by the user, 
	 * and then retrieves the section detail from the database
	 * 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		SelectCorrectAnsForm selectCorrectAns = (SelectCorrectAnsForm) form;// TODO Auto-generated method stub
HttpSession hs = request.getSession(true);
		
		hs.setAttribute("testName", selectCorrectAns.getTestName());
		
		PreparedStatement psSectionDetail=null;
		ResultSet rsTestSecDetail=null;
		int testid=0;
		 int i;
	  				int questionNo=1;
	  				// displaying question no.
	  		
	  				ArrayList<Integer> quesNo=new ArrayList<Integer>();
	  				// ArrayList of integer for question no 
			  		
	  				ArrayList<Integer> sectionNo=new ArrayList<Integer>();
	  				// ArrayList of Section no.

		
		testid = SelectTestId.getTestId((String)hs.getAttribute("testName"));	
	   				
	   				try{
	   					// establishes connection with the database
   				          Connection con = Connect.prepareConnection();
   				
   				          //retrieves section and No. of questions in each section from the testsectiondetail
   				 psSectionDetail = con.prepareStatement("select Section_number, No_of_question from testsectiondetail where TestId=?");
   				 psSectionDetail.setInt(1, testid);
   				 		  				  		  						       				
   				 rsTestSecDetail=psSectionDetail.executeQuery();
 
 
		       while(rsTestSecDetail.next())
   						{
   						quesNo.add(rsTestSecDetail.getInt(2));
   						sectionNo.add(rsTestSecDetail.getInt(1));
   						}	
		       con.close();
	   				}catch (Exception e) {
	   					
	   					log.error("Exception in select Ans");
						// TODO: handle exception
					}
   					//storing the question no. to session attribute to display number of checkboxes accordingly.
   
   					hs.setAttribute("qno", quesNo);	
   					//storing the question no. to session attribute to display section number accordingly.

   					hs.setAttribute("secno", sectionNo);
   					//storing the section no. arraylist to session attribute
                   hs.setAttribute("testid", testid);
		
		return mapping.findForward("fillCorrectAns");
	}
}