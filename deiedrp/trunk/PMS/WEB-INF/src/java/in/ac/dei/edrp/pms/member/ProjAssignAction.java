/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package in.ac.dei.edrp.pms.member;

import in.ac.dei.edrp.pms.dataBaseConnection.MyDataSource;
import in.ac.dei.edrp.pms.viewer.CodeGenerator;
import in.ac.dei.edrp.pms.viewer.checkRecord;

import java.sql.*;
import java.util.*;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

/** 
 * MyEclipse Struts
 * Creation date: 06-25-2009
 * 
 * XDoclet definition:
 * @struts.action input="AssignProject.jsp" validate="true"
 */
public class ProjAssignAction extends Action {
	/*
	 * Generated Methods
	 */
	Connection con=null;
	PreparedStatement ps=null;
	ResultSet rs=null;
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session=request.getSession();
		
		ProjAssignForm projassignform = (ProjAssignForm) form;// TODO Auto-generated method stub
		String uid=(String)session.getAttribute("uid");
		String forwardString="assignfail";
		String permitted_By=uid;
		String valid_code="";
		String pass="Use your old password.";
	String orgportal=(String)session.getAttribute("validOrgInPortal");
		try{
			request.setAttribute("msginfo","This user is already worked for the same role on the same project.");
			/*
			 * established database connection.
			 * */
			con=MyDataSource.getConnection();
			PreparedStatement check=con.prepareStatement("select v.valid_id from validatetab v," +
					"user_in_org u,project p,role r where v.valid_user_key=u.valid_key" +
					" and u.valid_user_id=? and u.valid_orgportal=?" +
					" and p.project_code=v.valid_project_code and p.project_name=?" +
					" and v.valid_role_id=r.role_id and r.role_name=?");
			
			check.setString(1,projassignform.getUserId().trim());
			check.setString(2,orgportal);
			check.setString(3,projassignform.getProjectName());
			check.setString(4,projassignform.getRoleName());
			rs=check.executeQuery();
			if(!rs.next())//It means the user does not working in the selected project on the selected role.
		    {
//			ArrayList<String> al=new ArrayList<String>();
//				while(uid!=null)
//	 			{
//	 				//System.out.println("anil my uid="+uid);
//	 				al.add(uid);
//	 				uid=runQuery(uid,projassignform.getProjectName());
//	 			}
//				Iterator<String> i=null;
//		
//				i=al.iterator();
//				// f=false;
//					 while(i.hasNext())
//					 {
//				 		if(projassignform.getUserId().trim().equals(i.next()))
//						{
//							//f=true;
//							break;
//						 }
//			
//			
		String valid_key="";
		request.setAttribute("uidinfo",projassignform.getUserId());
		if(projassignform.getUserId().equalsIgnoreCase(uid))
		{
			request.setAttribute("uidinfo",uid);
			System.out.println("login person valid key="+(valid_key=checkRecord.twoFieldDuplicacyChecker("Valid_Key","user_in_org","valid_user_id",uid.trim(),"Valid_OrgPortal",orgportal)));
		}
		else
		{
			System.out.println("other person valid key="+(valid_key=checkRecord.twoFieldDuplicacyChecker("Valid_Key","user_in_org","valid_user_id",projassignform.getUserId().trim(),"Valid_OrgPortal",orgportal)));
			request.setAttribute("msginfo","This user does not belongs to current portal and organization \n" +
				",for adding this user in his project you shold be added this user in his organization first then try to add.");
		}
		if(checkRecord.duplicacyChecker("Valid_Key","user_role_in_org","Valid_Key",valid_key)!=null)
		{
			System.out.println("exist in user_role_in_org then permitted by='super admin'");
			//permitted_By="superadmin";
			permitted_By=checkRecord.duplicacyChecker("login_user_id","login","authority","Super Admin");
		}
		
		PreparedStatement ps=con.prepareStatement("insert into validatetab values(?,?,?,?,?,?,?)");
		PreparedStatement pst=con.prepareStatement("select max(substr(Valid_Id,8)) from validatetab where substr(Valid_Id,4,4)=Date_Format(Now(),'%Y')");
		ResultSet rst=pst.executeQuery();
		rst.next();
		String maxvalue=rst.getString(1);
		if(maxvalue!=null)
		{
			valid_code=CodeGenerator.gettingCombineCode("VID",Long.parseLong(maxvalue)+1,5);
		}
		else
			valid_code=CodeGenerator.gettingCombineCode("VID",1,5);
		System.out.println("valid code="+valid_code);
		ps.setString(1,valid_code);
		ps.setString(2,valid_key);
		ps.setString(3,permitted_By);
		ps.setString(4,checkRecord.twoFieldDuplicacyChecker("Project_Code","project","Project_Name",projassignform.getProjectName(),"Valid_Org_Inportal",orgportal));
		//if(permitted_By.equalsIgnoreCase("superadmin"))
		if(!permitted_By.equalsIgnoreCase(uid))			
			orgportal=null;
		ps.setString(5,checkRecord.twoFieldDuplicacyChecker("Role_Id","role","Role_Name",projassignform.getRoleName(),"ValidOrgPortal",orgportal));
		ps.setString(6,"Default");
		ps.setString(7,"Active");
	    int v=ps.executeUpdate();/*if v>0 it means insertion operation successful in 'validatetab' table.*/
			if(v>0)
			{
					request.setAttribute("msginfo", "Project Assigned Successfully!!");
					request.setAttribute("AssignProjName",projassignform.getProjectName());
					request.setAttribute("AssignRoleName",projassignform.getRoleName());
					request.setAttribute("passinfo",pass);
					forwardString="assignsuccess";
			}
		}
		}
		catch(Exception e){e.printStackTrace();}

		return mapping.findForward(forwardString);
	}
	
	/* This method is used for checking the authority level of the user. */ 
	 String runQuery(String uid,String pname)
	 {
	try{
	 ps=con.prepareStatement("select distinct v.PermittedBy from validatetab v,project p"+
			 " where v.User_ID=? and (p.Project_Name=? and p.Project_ID=v.Project_ID)");
		ps.setString(1,uid);
		ps.setString(2,pname);
		rs=ps.executeQuery();
		if(rs.next())
		{
			uid=rs.getString(1);
			//System.out.println("anil my uid in runquery ="+uid);
		}
	 	  else
	 	  uid=null;
	 	 }
	 catch(Exception e){System.out.println("error in runQuery="+e);
	 	 }
	 	return(uid);
	 }
		
}