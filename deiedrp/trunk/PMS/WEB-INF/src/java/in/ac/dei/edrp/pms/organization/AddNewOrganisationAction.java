package in.ac.dei.edrp.pms.organization;
/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */

import in.ac.dei.edrp.pms.dataBaseConnection.MyDataSource;
import in.ac.dei.edrp.pms.viewer.checkRecord;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;

import java.sql.*;

/** 
 * MyEclipse Struts
 * Creation date: 18-03-2010
 * 
 * XDoclet definition:
 * @struts.action path="/saveorganization" name="orgform" input="neworganisation.jsp" scope="request" validate="true"
 */
/**
 * This Action class is responsible for inserting the Organisation details in database.
 */
public class AddNewOrganisationAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * This method is resposible for inserting the Organisation details into database
	 * "orgSearchList": this attribute sets the value of all Organisation from the object of class "organiazation.OrgList"
	 * "message" : This attribute sets only the message,which willbe shown to next view page.
	 * @param mapping It holds the action mapping information  used to invoke a struts action
	 * @param form It holds the object of bean class,named OrgForm
	 * @param request The HTTP servlet request,which is going to be processed
	 * @param response The HTTP servlet response,which is going to be created.
	 * @return ActionForward Onsuccessfull insertion,it returns saveorg othewise error and null for next view
	 * @param x if x is greater than zero it means insertion operation is successful.
	
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
				OrgForm orgform=(OrgForm) form;
				Connection con=null;
				String forwardmsg="info";
		try
		{
			request.setAttribute("message", "No Organisation Added.");
		/*
		 * Established database connection.
		 * */
			con=MyDataSource.getConnection();
			if(checkRecord.duplicacyChecker("Org_ID","organisation","Org_Name",orgform.getIname().trim())!=null)
			{
				return mapping.findForward("orgsuccess");
			}
		/*
		 * inserting values into 'organisation' table.
		 * */
			String state_id=checkRecord.duplicacyChecker("state_id","state","state_name",orgform.getIstate());
		PreparedStatement ps=con.prepareStatement("insert into organisation values(?,?,?,?,?,?,?,?)");
		ps.setInt(1,0);	//org_id is auto incremented.
		ps.setString(2,orgform.getIname());
		ps.setString(3,orgform.getIaddress());
		ps.setString(4,checkRecord.twoFieldDuplicacyChecker("city_id","city","state_id",state_id,"city_name",orgform.getIcity()));
		ps.setString(5,state_id);
		ps.setString(6,orgform.getIphoneno());
		ps.setString(7,orgform.getIfax());
		ps.setString(8,orgform.getIurl());
		
		int x=ps.executeUpdate();
			if(x>0) /*if x is greater than zero it means insertion operation is successful.*/
			{	
				ActionErrors errors = new ActionErrors();
				ActionMessage error = new ActionMessage("msg.org.added");
				errors.add("orgmsg",error);
				saveErrors(request,errors);
				forwardmsg="orgsuccess";
			}
		}
		catch(Exception e)
		{System.out.println("error in add new org action="+e);}
		finally
		{
			MyDataSource.freeConnection(con);
		}
		return mapping.findForward(forwardmsg);
	}	
}