/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package upload;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import dataBaseConnection.MyDataSource;

/** 
 * MyEclipse Struts
 * Creation date: 10-06-2009
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="success" path="page.downloadsuccess"
 */
/**
 * This class is responsible for setting the list of files or object of UploadFileForm with their value in a attribute
 */
public class FileDownLoadListAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * It sets the list of files in a atribute, by using this attribute data,Jsp page will populate the list of uploaded files
	* @param mapping It holds the action mapping information  used to invoke a struts action
	 * @param form It holds the object of bean class
	 * @param request The HTTP servlet request,which is going to be processed
	 * @param response The HTTP servlet response,which is going to be created.
	 * @return ActionForward returns filedownloadlist for next view.
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		PreparedStatement ps=null;
		ResultSet rs=null;
		Connection con=null;
		HttpSession session=request.getSession();
		try{
		con=MyDataSource.getConnection();
		//System.out.println("Login person is="+(String)this.getServlet().getServletConfig().getServletContext().getAttribute("uid"));
		ps=con.prepareStatement("select l.Authority from login l where l.user_id=?");
		ps.setString(1,(String)session.getAttribute("uid"));
		rs=ps.executeQuery();
		rs.next();
		//System.out.println("Authority is "+rs.getString(1));
		//System.out.println("User Name "+rs.getString(2));
		if(rs.getString(1).equals("Admin"))
			{
				//System.out.println("Method is runnig in admin");
				request.setAttribute("fileDownloadList", new DownloadFileAction());
			}
			else
			{
				//System.out.println("Method is runnig in else");
				request.setAttribute("fileDownloadList", new DownloadFileAction((String)session.getAttribute("uid")));
			}
		}
		catch(Exception e){System.out.println("Error in DB "+e);}				
		finally
		{
			MyDataSource.freeConnection(con);
		}
		//System.out.println("Method is runnig out");	
		return mapping.findForward("filedownloadlist");
	}
}