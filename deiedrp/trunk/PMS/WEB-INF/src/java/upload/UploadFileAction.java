/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package upload;
import java.io.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import dataBaseConnection.MyDataSource;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.upload.FormFile;


/** 
 * MyEclipse Struts
 * Creation date: 06-27-2009
 * 
 * XDoclet definition:
 * @struts.action input="upload_file.jsp" validate="true"
 */
/**
 * This class is responsible for uploading the file to server and inserting the values into database.
 */
public class UploadFileAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping It holds the action mapping information  used to invoke a struts action
	 * @param form It holds the object of bean class UploadFileForm
	 * @param request The HTTP servlet request,which is going to be processed
	 * @param response The HTTP servlet response,which is going to be created.
	 * @return ActionForward 
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		HttpSession session=request.getSession();
		/**
		 * Cast the form parameter to an UploadFileForm.
		 * */
		UploadFileForm uploadfileform=(UploadFileForm) form;// TODO Auto-generated method stub
		/**
		 * Create the FormFile object for obtaining information about the uploaded file.
		 * */
		FormFile myFile = uploadfileform.getUploadedFile();
		
	   /**
	    * obtain the content type of a file.
	    * */
		String contentType = myFile.getContentType();
	    /**
	     * obtain the fileName of a file.
	     * */
		String fileName = myFile.getFileName();
		String extype=fileName.substring(fileName.lastIndexOf(".")+1, fileName.length());
	if(!extype.equalsIgnoreCase("exe"))
	{
		//System.out.println("extension="+extype);
		/**
		 * obtain the server path where the desired file will be saved.
		 * */
		String uid1=(String)session.getAttribute("uid");
		new File(getServlet().getServletContext().getRealPath("/"),"upload").mkdir();
		new File(getServlet().getServletContext().getRealPath("/")+"upload"+("/")+uid1).mkdir();
		new File(getServlet().getServletContext().getRealPath("/")+"upload"+("/")+uid1+("/")+uploadfileform.getProjectName()).mkdir();
	    String filePath = getServlet().getServletContext().getRealPath("/") +"upload"+("/")+uid1+("/")+uploadfileform.getProjectName();
	      /**
	       *  Save file on the server.
	       * */
	        if(!fileName.equals(""))
	        {  
	            System.out.println("Server path:" +filePath);
	            //Create file
	            File fileToCreate = new File(filePath, fileName);
	            //If file does not exists create file                      
	            if(!fileToCreate.exists())
	            {
	              FileOutputStream fileOutStream = new FileOutputStream(fileToCreate);
	              fileOutStream.write(myFile.getFileData());
	              fileOutStream.flush();
	              fileOutStream.close();
	            }  
	        }
	        Connection con=null;
	    try
		{
	    	//response.getWriter().println("fname="+fileName+",c type="+contentType+",ownr="+uploadfileform.getFowner()+",size="+myFile.getFileSize()+",path="+filePath);
			con=MyDataSource.getConnection();
			/*
			 * obtain the user id of an user which is corrently logged in.
			 * */
			String uid=(String)session.getAttribute("uid");
			
			/*
			 * Inserting the following data(file name,content type,user name,file size,project name,file description,path) in the file table.
			 * */
			PreparedStatement ps=con.prepareStatement("insert into file values(?,?,?,?,?,?,?)");
			ps.setString(1,fileName);
			ps.setString(2,contentType);
				ps.setString(3,uid);
			ps.setInt(4,myFile.getFileSize());
			ps.setString(5,uploadfileform.getProjectName());
			ps.setString(6,uploadfileform.getFdescription());
			ps.setString(7,filePath);
			int n=ps.executeUpdate();
				if(n>0)//if n>0 it means insertion operation is successful.
				{
					request.setAttribute("message",fileName+" File has been successfully uploaded");
					//return mapping.findForward("success");
				}
				
			}
		catch(Exception e)
		{
			//System.out.println("Error is "+e);
				request.setAttribute("message",fileName+" File already exist in database");
		}
		finally
		{
			MyDataSource.freeConnection(con);
		}
		}
		else
			request.setAttribute("message",fileName+" has wrong extension,'exe' file is not allowed");
		return mapping.findForward("success");
		
	}
}
