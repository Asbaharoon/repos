/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.dei.edrp.pms.upload;

import java.io.*;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

/** 
 * MyEclipse Struts
 * Creation date: 11-17-2009
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="success" path="/WebRoot/WEB-INF/JspFiles/fileDownLoad.jsp"
 */
public class RunDownload extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		//UploadFileForm uploadfileform=(UploadFileForm)form;
	   	String file=(String)request.getParameter("fileName");
		String owner=(String)request.getParameter("owner");
		String project=(String)request.getParameter("projectName");
		//System.out.println("File="+file+"owner="+owner+"project="+project);
		try{
			String filePath = getServlet().getServletContext().getRealPath("/") +"upload"+("/")+owner+("/")+project;
			//System.out.println(file);
			//System.out.println("IN run download:"+filePath);
			response.setContentType("APPLICATION/OCTET-STREAM");
	 	
	 	/*
	 		Initialize the http content-disposition header to 
	 		indicate a file attachment with the filename.
	 	*/
		response.setHeader("Content-Disposition","attachment;filename="+file);
     	/* transfer the file byte-by-byte to the response object.*/
     	File f = new File(filePath,file);
   	  	FileInputStream fis = new FileInputStream(f);
   		BufferedInputStream bstr=new BufferedInputStream(fis);
   		int size=(int)f.length();
   		byte[] data=new byte[size];
   		bstr.read(data,0,size);
   		bstr.close();
   		OutputStream os=response.getOutputStream();
   		os.write(data);
   		os.flush();
   		os.close();
   	}catch(Exception e)
   	{
   		e.printStackTrace();
	}
		//System.out.println("Running till last");
		return mapping.findForward("success");
	}
}