/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.dei.edrp.pms.organization;

import java.sql.Connection;
import java.sql.PreparedStatement;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.dei.edrp.pms.dataBaseConnection.MyDataSource;

/** 
 * MyEclipse Struts
 * Creation date: 11-03-2009
 * XDoclet definition:
 * @struts.action path="/deleteorg" name="editorgform" input="/WEB-INF/JspFiles/Organization/successorg.jsp" scope="request" validate="true"
 * @struts.action-forward name="deleteorg" path="page.deleteorg"
 */
/**
 * This Action class is responsible for deleting an organisation.It has only one method execute()
 
 */
public class DeleteOrgAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * It gets the Parameter ID which contains the id of an organisation and it is the primary key
	 * and then by using that key,it deletes the values from a database
	 * After that it sets the attribute orgsearchlist and message and then finally returns the mapping string for next view
	 * @param mapping It holds the action mapping information  used to invoke a struts action
	 * @param form It holds the object of bean class,named EditOrgForm
	 * @param request The HTTP servlet request,which is going to be processed
	 * @param response The HTTP servlet response,which is going to be created.
	 * @return ActionForward ,It returns "deleteorg" on successfull deletion
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		if(request.getParameter("id")!=null)
		{
			Connection con=null;
			try {
			//This method Established the connection from the database MySql.
			con=MyDataSource.getConnection();
		
		/**
		 * Delete the 'organisation' corresponding to the parameter "id"
		 * */
		PreparedStatement ps=con.prepareStatement("delete from organisation where Org_Id=?");
		ps.setString(1, request.getParameter("id"));
		
		ps.executeUpdate();
		
		}
		catch (Exception e){}
		finally
		{
			MyDataSource.freeConnection(con);
		}
		}
		return mapping.findForward("deleteorg");
		//return mapping.findForward("searchorg");
		
	}
}