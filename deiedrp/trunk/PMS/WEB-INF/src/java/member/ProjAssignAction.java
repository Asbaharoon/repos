/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package member;

import java.sql.*;
import java.util.*;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import dataBaseConnection.MyDataSource;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

/** 
 * MyEclipse Struts
 * Creation date: 06-25-2009
 * 
 * XDoclet definition:
 * @struts.action input="AssignProject.jsp" validate="true"
 */
public class ProjAssignAction extends Action {
	/*
	 * Generated Methods
	 */
	Connection con=null;
	PreparedStatement ps=null;
	ResultSet rs=null;
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session=request.getSession();
		int v=0,check=0;
		boolean f=false;
		//String s="";
		String pass="Use your old password.";
		ProjAssignForm projassignform = (ProjAssignForm) form;// TODO Auto-generated method stub
		//System.out.println("uid="+this.getServlet().getServletConfig().getServletContext().getAttribute("uid"));
		
		/*
		 * Here the variable uid holds the user id which is currently logged in.
		 * */
		String uid=(String)session.getAttribute("uid");
		request.setAttribute("AssignProjName",projassignform.getProjectName());
		
		try{
			request.setAttribute("msginfo","This user is already added for the same project.");
			/*
			 * established database connection.
			 * */
			con=MyDataSource.getConnection();
			ArrayList<String> al=new ArrayList<String>();
				while(uid!=null)
	 			{
	 				//System.out.println("anil my uid="+uid);
	 				al.add(uid);
	 				uid=runQuery(uid,projassignform.getProjectName());
	 			}
				Iterator<String> i=null;
		
				i=al.iterator();
				 f=false;
					 while(i.hasNext())
					 {
				 		if(projassignform.getUserId().trim().equals(i.next()))
						{
							f=true;
							break;
						 }
					 }
								
		}
		catch(Exception e){}
	
				if(f==true)
				{
					request.setAttribute("uidinfo", projassignform.getUserId());
					request.setAttribute("passinfo", pass);
					//System.out.println("anil if true");
					//s="assignfail";//it is already added above u
				}
	else
	{
		try{
		//response.getWriter().println("authority="+projassignform.getMyradio());
			String id=null;
			uid=(String)session.getAttribute("uid");
			PreparedStatement psu=con.prepareStatement("select Authority from login where User_ID=?");
			psu.setString(1,uid);
			ResultSet rsu=psu.executeQuery();
			rsu.next();
				
	if(rsu.getString(1).equals("Admin"))
	{
			PreparedStatement pst=con.prepareStatement("select Project_ID from project where Project_Name=? and Assigned=?");
			pst.setString(1, projassignform.getProjectName());
			pst.setInt(2, 0);
			
			ResultSet rst=pst.executeQuery();
			if(!rst.next())
			{
				//working for member tomorrow.
				return mapping.findForward("alreadyAssigned");
			}
			else
			{
				check=1;
				id=rst.getString(1);
				pst=con.prepareStatement("update project set Assigned=? where Project_ID=?"); 
				pst.setInt(1,1);																				
				pst.setString(2,id);
				pst.executeUpdate();
			}
	}
	else
	{
		PreparedStatement pst=con.prepareStatement("select Project_ID from project where Project_Name=?");
		pst.setString(1, projassignform.getProjectName());
		ResultSet rst=pst.executeQuery();
		rst.next();
		id=rst.getString(1);
	}
	
	/*
	 * Insert the data(user_id,authority) in a 'login' table.
	 */
	try{
	PreparedStatement ps1=con.prepareStatement("insert into login values(?,?,SHA1(?))");
	ps1.setString(1,projassignform.getUserId());
	ps1.setString(2,"User");
	String pass1=PasswordGenerator.generatePassword(3,8).toLowerCase();
	ps1.setString(3,pass1);
	int n=ps1.executeUpdate();
	if(n>0)
	{
		pass=pass1;
	}
	
	}
	catch(Exception e1){}
	finally
	{
		request.setAttribute("uidinfo", projassignform.getUserId());
		request.setAttribute("passinfo", pass);
	}
	
	//from this,is added on 11th december when change in database
	PreparedStatement pst=con.prepareStatement("select v.User_ID from validatetab v where v.User_ID=? and v.Project_ID=?");
	pst.setString(1,projassignform.getUserId());
	pst.setString(2,id);
	ResultSet rst=pst.executeQuery();
	if(!rst.next())
	{
		//to this point is added on 11th december when change in database
		
		/*
		 *Insert the data(user_id,permittedBy,project_name,organisation_name)in a 'validatetab' table. 
		 * */
	//System.out.println("uid before inserting in validatetab="+uid+" , "+id+","+projassignform.getUserId()+","+projassignform.getOrgName());
		PreparedStatement ps=con.prepareStatement("insert into validatetab values(?,?,?,?,?)");
		ps.setString(1,projassignform.getUserId());
		ps.setString(2,uid);
		ps.setString(3,id);
		PreparedStatement pst1=con.prepareStatement("select Org_ID from organisation where Org_Name=?");
		pst1.setString(1, projassignform.getOrgName());
		ResultSet rst1=pst1.executeQuery();
		rst1.next();
		ps.setInt(4,rst1.getInt(1));
		ps.setInt(5,0);
		//System.out.println("orgid="+rst1.getInt(1));
		v=ps.executeUpdate();/*if v>0 it means insertion operation successful in 'validatetab' table.*/
		if(v>0)
		{
			if(check==1)
				request.setAttribute("msginfo", "Project Assigned Successfully!!");
			else
				request.setAttribute("msginfo", "User has been added successfully!");
		}
	}//this will added on 11th december when change in database
		}
		catch(Exception e)
		{
			System.out.println("Error in ProjAssignAction.java file ="+e);
		}
	}
	if(con!=null)
	{
		MyDataSource.freeConnection(con);
	}
				// TODO Auto-generated method stub
		return mapping.findForward("assignsuccess");
	}
	
	
	
	 String runQuery(String uid,String pname)
	 {
	try{
	 ps=con.prepareStatement("select distinct v.PermittedBy from validatetab v,project p"+
			 " where v.User_ID=? and (p.Project_Name=? and p.Project_ID=v.Project_ID)");
		ps.setString(1,uid);
		ps.setString(2,pname);
		rs=ps.executeQuery();
		if(rs.next())
		{
			uid=rs.getString(1);
			//System.out.println("anil my uid in runquery ="+uid);
		}
	 	  else
	 	  uid=null;
	 	 }
	 catch(Exception e){System.out.println("error in runQuery="+e);
	 	 }
	 	return(uid);
	 }
		
}