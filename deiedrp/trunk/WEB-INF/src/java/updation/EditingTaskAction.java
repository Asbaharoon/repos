package updation;
/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import dataBaseConnection.MyDataSource;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import java.sql.*;


/** 
 * MyEclipse Struts
 * Creation date: 06-17-2009
 * XDoclet definition:
 * This class is used for editing the desired task.
 * @struts.action path="/go4" name="edittaskform" input="editTask.jsp" scope="request" validate="true"
 */
public class EditingTaskAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		EditTaskForm edittaskform = (EditTaskForm) form;// TODO Auto-generated method stub
		HttpSession session=request.getSession();
		
		/*
		 * The variable s holds updationfail or successtask.
		 * updationfail for updationfail.jsp page.
		 * successtask for showTask.jsp page. 
		 * */
		String s="updationfail";
		Connection con=null;
		try{
		con=MyDataSource.getConnection();
		System.out.println("task id in editing task action java file="+(String)session.getAttribute("taskId"));
		//For updating the task table
	if(edittaskform.getProjectName()!=null)
	{
		PreparedStatement psProjName=con.prepareStatement("select p.project_Name from project p,task t,validatetab v where "+
		"t.Task_ID=? and t.Valid_ID=v.Valid_ID and v.Project_ID=p.Project_ID");
		psProjName.setString(1,(String)session.getAttribute("taskId"));
		ResultSet rsProjName=psProjName.executeQuery();
		rsProjName.next();

		if(!edittaskform.getProjectName().equals(rsProjName.getString(1)))
		{
			//reset the projectname and this attribute is used for review the task list
			session.setAttribute("projectName",edittaskform.getProjectName());
		try{
			PreparedStatement ps=con.prepareStatement("update task set Dependency='' where "+
					"Dependency=?");
			ps.setString(1,(String)session.getAttribute("taskId"));
			ps.executeUpdate();
			}
			catch(SQLException se)
			{
				System.out.println("se="+se);
			}
		}
	}
	//System.out.println(edittaskform.getTaskName()+","+edittaskform.getResourceName()+","+edittaskform.getOrgName()+","+edittaskform.getProjectName());
		//System.out.println(edittaskform.getOrgName()+","+edittaskform.getProjectName());
		//System.out.println(request.getParameter("ifield")+","+edittaskform.getPcom()+","+edittaskform.getDarea()+","+edittaskform.getTaskDependency());	
	ResultSet rst2=null;
	try{
	PreparedStatement ps=con.prepareStatement("update task t set t.Valid_ID="+
			"(select v.Valid_ID from validatetab v where v.Project_ID=? and v.User_ID=? and v.Org_ID=?) where t.Task_ID=?");
	
	PreparedStatement pst2=con.prepareStatement("select p.Project_ID from project p "+
	"where p.Project_Name=?");
	pst2.setString(1, edittaskform.getProjectName());
	rst2=pst2.executeQuery();
	rst2.next();
	ps.setString(1,rst2.getString(1));
	ps.setString(2,edittaskform.getResourceName());
	PreparedStatement pst1=con.prepareStatement("select o.Org_ID from organisation o "+
			"where o.Org_Name=?");
	pst1.setString(1, edittaskform.getOrgName());
	ResultSet rst1=pst1.executeQuery();
	rst1.next();
	ps.setInt(3,rst1.getInt(1));
	ps.setInt(4,Integer.parseInt((String)session.getAttribute("taskId")));
	ps.executeUpdate();

	ps=con.prepareStatement("update task t,validatetab v set t.Task_Name=?,"+
				"t.Start_Date=?,t.Finished_Date=?,t.Gchart_Color=?,"+
				"t.Per_Completed=?,t.Dependency=?,t.Description=?"+
				" where t.Task_Id=?");
		ps.setString(1,edittaskform.getTaskName().trim());
		
		ps.setString(2,edittaskform.getSdate());
		ps.setString(3,edittaskform.getFdate());
		//ps.setString(7,edittaskform.getInput_field());
		ps.setString(4,request.getParameter("ifield"));
		ps.setInt(5,Integer.parseInt(edittaskform.getPcom()));
		try
		{
			if(edittaskform.getTaskDependency().equals("No") || edittaskform.getTaskDependency()==null) 
			{
				ps.setString(6,"");
			}
			else
			{
				PreparedStatement ps1=con.prepareStatement("select t.Task_ID from task t,validatetab v where t.Task_Name=? "+
				"and v.Project_ID=? and v.Valid_ID=t.Valid_ID");
				ps1.setString(1,edittaskform.getTaskDependency());
				ps1.setString(2,rst2.getString(1));
				System.out.println("project id="+rst2.getString(1));
				ResultSet rs2=ps1.executeQuery();
				rs2.next();
				ps.setString(6,rs2.getString(1));
			}
		}
		catch(Exception e1)
		{
			ps.setString(6,"");
		}	
		//System.out.println("area="+edittaskform.getDarea().trim()+"tname="+edittaskform.getTaskName()+"pid="+session.getAttribute("projectId")+"rname="+session.getAttribute("resourceName"));
		ps.setString(7,edittaskform.getDarea().trim());
		ps.setString(8,(String)session.getAttribute("taskId"));
		//System.out.println("project name="+session.getAttribute("projectName"));
		request.setAttribute("svalue",edittaskform.getProjectName());
		int n=ps.executeUpdate();
		if(n>0)/*if n is greater than zero it means update operation is successful.*/
		{
			s="successtask";
		}
		else
		{
			s="updationfail";
		}
	}
	catch(Exception sqlex){
							//System.out.println("error in EditingTaskAction anil="+sqlex);
							}
		}
		
		catch(Exception e){	}
		finally
		{
			MyDataSource.freeConnection(con);
		}
		return mapping.findForward(s);//calling to that jsp page which is assigned in variable s.
		}
	}