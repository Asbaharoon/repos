package task;

/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
import java.sql.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import dataBaseConnection.MyDataSource;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;


/** 
 * MyEclipse Struts
 * Creation date: 06-25-2009
 * 
 * XDoclet definition:
 * @struts.action input="newtask.jsp" validate="true"
 */
public class TaskAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		TaskForm taskform = (TaskForm) form;
		request.setAttribute("taskform",taskform);
		Connection con=null;
		try{
		con=MyDataSource.getConnection();

		PreparedStatement pst1=con.prepareStatement("select o.Org_ID from organisation o "+
		"where o.Org_Name=?");
		pst1.setString(1, taskform.getOrgName());
		ResultSet rst1=pst1.executeQuery();
		rst1.next();
		PreparedStatement pst2=con.prepareStatement("select p.Project_ID from project p"+
			" where p.Project_Name=?");
		pst2.setString(1, taskform.getProjectName());
		ResultSet rst2=pst2.executeQuery();
			rst2.next();
		PreparedStatement check=con.prepareStatement("select t.Task_ID from task t,validatetab v where "+
				"t.Task_Name=? and v.User_ID=? and v.Org_ID=? and v.Project_ID=? and v.Valid_ID=t.Valid_ID");
		check.setString(1,taskform.getTaskName().trim());
		check.setString(2,taskform.getResourceName());
		check.setInt(3,rst1.getInt(1));
		check.setInt(4,rst2.getInt(1));
		ResultSet rs=check.executeQuery();
		if(rs.next())//it means record already erxist.
		{
			return mapping.findForward("taskAssignfail");
		}
	
		//added on 11th december 09
		check=con.prepareStatement("select v.Valid_ID from validatetab v where "+
		"v.User_ID=? and v.Org_ID=? and v.Project_ID=?");
check.setString(1,taskform.getResourceName());
check.setInt(2,rst1.getInt(1));
check.setInt(3,rst2.getInt(1));
rs=check.executeQuery();
if(rs.next())//it means record already erxist.
{
	System.out.println("anil tiwari in TaskAction.java="+taskform.getResourceName());
	//inserting the data in task table.			
	PreparedStatement ps=con.prepareStatement("insert into task (Task_Name,Start_Date,Finished_Date,Gchart_Color,Per_Completed,"+
			"Description,Task_ID,Valid_ID) values(?,?,?,?,?,?,?,?)");
		ps.setString(1,taskform.getTaskName().trim());
		ps.setString(2,taskform.getSdate());
		ps.setString(3,taskform.getFdate());
		//ps.setString(7,taskform.getInput_field());
		ps.setString(4,request.getParameter("ifield"));
		ps.setString(5,taskform.getPcom());
		ps.setString(6,taskform.getDarea());
		ps.setInt(7,0);
		ps.setInt(8,rs.getInt(1));
		
		int x=ps.executeUpdate();
		String tid="";
		try{
			
		PreparedStatement ps2=con.prepareStatement("select t.Task_ID from task t,validatetab v where "+
				"t.Task_Name=? and v.User_ID=? and v.Org_ID=? and v.Project_ID=? and v.Valid_ID=t.Valid_ID");
		ps2.setString(1,taskform.getTaskDependency());
		ps2.setString(2,taskform.getResourceName());
		ps2.setInt(3,rst1.getInt(1));
		ps2.setString(4,rst2.getString(1));
		rs=ps2.executeQuery();
		if(!rs.next())
		{
			ps2=con.prepareStatement("select t.Task_ID from task t,validatetab v where "+
			"t.Task_Name=? and v.User_ID!=? and v.Org_ID=? and v.Project_ID=? and v.Valid_ID=t.Valid_ID");
			ps2.setString(1,taskform.getTaskDependency());
			ps2.setString(2,taskform.getResourceName());
			ps2.setInt(3,rst1.getInt(1));
			ps2.setString(4,rst2.getString(1));
			rs=ps2.executeQuery();
			rs.next();	
		}
			tid=rs.getString(1);
		}
		catch(Exception e){}
		PreparedStatement ps1=con.prepareStatement("update task t,validatetab v set t.Dependency=? where t.Task_Name=? "+
				"and v.User_ID=? and v.Org_ID=? and v.Project_ID=? and v.Valid_ID=t.Valid_ID");
		ps1.setString(1,tid);
		ps1.setString(2,taskform.getTaskName());
		ps1.setString(3,taskform.getResourceName());
		ps1.setInt(4,rst1.getInt(1));
		ps1.setString(5,rst2.getString(1));
		ps1.executeUpdate();
		if(x>0)
			//response.getWriter().println("One Record has been Successfully Inserted ! ");
		{
			ActionErrors errors = new ActionErrors();
			ActionMessage error = new ActionMessage("msg.task.added");
			errors.add("taskmsg",error);
			saveErrors(request,errors);
			return mapping.findForward("success");
		}
			else
			//response.getWriter().println("No Record Inserted ! ");
			return mapping.findForward("taskAssignfail");
		}
		
		else
		{
			return mapping.findForward("taskAssignfail");
		}
	}
		catch(Exception e)
		{
			return mapping.findForward("taskAssignfail");
		}
		finally
		{
			MyDataSource.freeConnection(con);
		}
			//return null;
	}
	
}